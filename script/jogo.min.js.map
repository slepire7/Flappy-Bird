{"version":3,"file":"jogo.min.js","sources":["../ts/storage/index.ts","../ts/config/index.ts","../ts/game/index.ts","../ts/jogo.ts","../ts/elements/flappybird.ts","../ts/elements/chao.ts","../ts/elements/cano.ts","../ts/elements/plano_fundo.ts","../ts/elements/placar.ts"],"sourcesContent":["export namespace Storage {\r\n    export function Set(key: string, value: any) {\r\n\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n    export function Get<T>(key: string): T {\r\n        const value = localStorage.getItem(key);\r\n\r\n        if (value)\r\n            return JSON.parse(value) as T;\r\n\r\n        return \"\" as T\r\n    }\r\n}","import { Interface } from \"../interface/base\";\r\nimport { Storage } from \"../storage\";\r\n\r\nexport namespace Config {\r\n    export const canvas = document.querySelector('canvas') as HTMLCanvasElement;\r\n    export const contexto = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    export let frames = 0;\r\n    export const KeyNameStorage = {\r\n        lastPoint: 'FlappyBird1.0Lp',\r\n        bestPoint: 'FlappyBird1.0bp',\r\n        currentPoint: 'FlappyBird1.0cp'\r\n    }\r\n    const hostnameDev = ['localhost', '127.0.0.1']\r\n    const isDeveloper = hostnameDev.includes(window.location.hostname);\r\n\r\n    export const TrilhasSonoras = {\r\n        \"HIT\": () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/hit.wav`),\r\n        'PULO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/pulo.wav`),\r\n        'CAIU': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/caiu.wav`),\r\n        'PONTO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/ponto.wav`)\r\n    }\r\n    export const sprites = new Image();\r\n    sprites.src = `${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/texture/sprites.png`;\r\n    export const Draw = (Model: Interface.Utils.IBaseModel) => {\r\n        contexto.drawImage(\r\n            Config.sprites,\r\n            Model.spriteX, Model.spriteY,\r\n            Model.largura, Model.altura,\r\n            Model.x, Model.y,\r\n            Model.largura, Model.altura,\r\n        )\r\n    }\r\n\r\n    export function fazColisao(a: Interface.Utils.IBaseModel, b: Interface.Utils.IBaseModel) {\r\n\r\n        const aY = a.y + a.altura;\r\n        const bY = b.y;\r\n        return aY >= bY;\r\n    }\r\n\r\n}\r\nexport namespace Config.Method {\r\n    export function randomIntFromInterval(min: number, max: number) { // min and max included \r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    export function ClearMemory() {\r\n        frames = 0;\r\n        Storage.Set(KeyNameStorage.currentPoint, 0)\r\n    }\r\n}","import { Interface } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nimport { FlappyBird } from \"../elements/flappybird\";\r\nimport { Chao } from '../elements/chao';\r\nimport { Cano } from '../elements/cano';\r\nimport { PlanoDeFundo } from '../elements/plano_fundo';\r\nimport { Placar, MainScoreGame } from '../elements/placar';\r\n\r\nexport namespace Game.Main {\r\n    const Engine: Interface.Utils.Globais = {}\r\n    export const Telas: Interface.Utils.Pages = {\r\n        INICIO: {\r\n            inicializa() {\r\n                Engine.flappyBird = new FlappyBird();\r\n                Engine.chao = new Chao();\r\n                Engine.canos = new Cano();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n\r\n                Engine.flappyBird.desenha();\r\n\r\n                Engine.chao.desenha();\r\n\r\n                mensagemGetReady.desenha();\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.JOGO);\r\n            },\r\n            atualiza() {\r\n\r\n                Engine.chao.atualiza();\r\n            }\r\n        },\r\n        JOGO: {\r\n            inicializa() {\r\n                Engine.placar = new Placar();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n                Engine.canos.desenha();\r\n                Engine.chao.desenha();\r\n                Engine.flappyBird.desenha();\r\n                Engine.placar.desenha();\r\n            },\r\n            click() {\r\n                Engine.flappyBird.pula();\r\n            },\r\n            atualiza() {\r\n                Engine.canos.atualiza(TelaCondicional(Telas.GAME_OVER), Engine.flappyBird, Engine.placar);\r\n                Engine.chao.atualiza();\r\n                Engine.flappyBird.atualiza(TelaCondicional(Telas.GAME_OVER), Engine);\r\n            }\r\n        },\r\n        GAME_OVER: {\r\n            inicializa() {\r\n            },\r\n            desenha() {\r\n                if (mensagemGameOver.desenha)\r\n                    mensagemGameOver.desenha();\r\n\r\n                new MainScoreGame().desenha();\r\n            },\r\n            atualiza() {\r\n\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.INICIO);\r\n            }\r\n        }\r\n    }\r\n\r\n    export function mudaParaTela(page: Interface.Utils.IPageGame) {\r\n        TelaAtiva = page;\r\n        TelaAtiva.inicializa();\r\n    }\r\n    export function TelaCondicional(page: Interface.Utils.IPageGame) {\r\n        return () => {\r\n            TelaAtiva = page;\r\n            TelaAtiva.inicializa();\r\n        }\r\n    }\r\n    export let TelaAtiva: Interface.Utils.IPageGame = {\r\n        click: () => {\r\n        },\r\n        atualiza: () => {\r\n        },\r\n        desenha: () => {\r\n        },\r\n        inicializa: () => {\r\n        }\r\n    }\r\n\r\n    const mensagemGetReady: Interface.Elements.IMessage = {\r\n        spriteX: 134,\r\n        spriteY: 0,\r\n        largura: 174,\r\n        altura: 152,\r\n        x: (Config.canvas.width / 2) - 174 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGetReady.spriteX,\r\n                spriteY: mensagemGetReady.spriteY,\r\n                largura: mensagemGetReady.largura,\r\n                altura: mensagemGetReady.altura,\r\n                x: mensagemGetReady.x,\r\n                y: mensagemGetReady.y\r\n            });\r\n        }\r\n    }\r\n    const mensagemGameOver: Interface.Elements.IMessage = {\r\n        spriteX: 134,\r\n        spriteY: 153,\r\n        largura: 226,\r\n        altura: 200,\r\n        x: (Config.canvas.width / 2) - 226 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGameOver.spriteX,\r\n                spriteY: mensagemGameOver.spriteY,\r\n                largura: mensagemGameOver.largura,\r\n                altura: mensagemGameOver.altura,\r\n                x: mensagemGameOver.x,\r\n                y: mensagemGameOver.y\r\n            })\r\n            Config.Method.ClearMemory();\r\n        }\r\n    }\r\n}","import { Config } from './config'\r\nimport { Game } from './game/index';\r\n\r\nnamespace Jogo.PageEvents {\r\n\r\n    export function Main() {\r\n\r\n        document.getElementById('game-canvas').addEventListener('click', function () {\r\n            if (Game.Main.TelaAtiva.click) {\r\n                Game.Main.TelaAtiva.click();\r\n            }\r\n        });\r\n\r\n        window.addEventListener('keypress', function (e: KeyboardEvent) {\r\n            if (Game.Main.TelaAtiva.click)\r\n                Game.Main.TelaAtiva.click()\r\n        })\r\n        Game.Main.mudaParaTela(Game.Main.Telas.INICIO);\r\n        loop();\r\n    }\r\n    function loop() {\r\n        Game.Main.TelaAtiva.desenha();\r\n        Game.Main.TelaAtiva.atualiza();\r\n        Config.frames += 1;\r\n        requestAnimationFrame(loop);\r\n    }\r\n}\r\n\r\nJogo.PageEvents.Main()","import { Interface } from '../interface/base'\r\nimport { Config } from '../config';\r\n\r\nexport class FlappyBird implements Interface.Elements.IFlappybird {\r\n    public frameAtual: number = 0;\r\n    public spriteX: number = 0;\r\n    public spriteY: number = 0;\r\n    public largura: number = 33;\r\n    public altura: number = 24;\r\n    public x: number = 10;\r\n    public y: number = 50;\r\n    public gravidade: number = 0.25;\r\n    public velocidade: number = 0;\r\n    public pulo: number = 4;\r\n    pula() {\r\n        Config.TrilhasSonoras.PULO().play();\r\n        this.velocidade = - this.pulo\r\n    };\r\n    movimentos: Interface.Utils.Movimento[] = [\r\n        { spriteX: 0, spriteY: 0, }, // asa pra cima\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n        { spriteX: 0, spriteY: 52, }, // asa pra baixo\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n    ];\r\n    atualizaOFrameAtual() {\r\n        const intervaloDeFrames = 10;\r\n        const passouOIntervalo = Config.frames % intervaloDeFrames === 0;\r\n\r\n        if (passouOIntervalo) {\r\n            const baseDoIncremento = 1;\r\n            const incremento = baseDoIncremento + this.frameAtual;\r\n            const baseRepeticao = this.movimentos.length;\r\n            this.frameAtual = incremento % baseRepeticao\r\n        }\r\n    };\r\n    desenha: Function = () => {\r\n        this.atualizaOFrameAtual();\r\n        const { spriteX, spriteY } = this.movimentos[this.frameAtual];\r\n        Config.Draw({\r\n            spriteX: spriteX,\r\n            spriteY: spriteY,\r\n            altura: this.altura,\r\n            largura: this.largura,\r\n            x: this.x,\r\n            y: this.y\r\n        });\r\n    };\r\n    atualiza(action: Function, _engine: Interface.Utils.Globais) {\r\n\r\n        if (Config.fazColisao(this, _engine.chao)) {\r\n            Config.TrilhasSonoras.CAIU().play()\r\n            action();\r\n            return;\r\n        }\r\n        this.velocidade = this.velocidade + this.gravidade;\r\n        this.y = this.y + this.velocidade;\r\n    }\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from '../config';\r\n\r\nexport class Chao implements Interface.Elements.IChao {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.spriteX = 0;\r\n        this.spriteY = 610;\r\n        this.largura = 224;\r\n        this.altura = 112;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 112;\r\n\r\n    }\r\n    atualiza() {\r\n        const movimentoDoChao = 1;\r\n        const repeteEm = this.largura / 2;\r\n        const movimentacao = this.x - movimentoDoChao;\r\n        this.x = movimentacao % repeteEm;\r\n    }\r\n    desenha() {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        });\r\n    }\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from '../config'\r\nimport { Storage } from \"../storage\";\r\n\r\n\r\nexport class Cano implements Interface.Elements.ICano {\r\n    largura: number;\r\n    altura: number;\r\n    espaco: number;\r\n    chao: Interface.Utils.Movimento;\r\n    ceu: Interface.Utils.Movimento;\r\n    pares: Interface.Utils.Dimensoes[];\r\n    constructor() {\r\n        this.largura = 52;\r\n        this.altura = 400;\r\n        this.espaco = 90;\r\n        this.chao = {\r\n            spriteX: 0,\r\n            spriteY: 169,\r\n        };\r\n        this.ceu = {\r\n            spriteX: 52,\r\n            spriteY: 169,\r\n        };\r\n        this.pares = [];\r\n    }\r\n    desenha() {\r\n        this.pares.forEach((par) => {\r\n            const yRandom = par.y;\r\n            const canoCeuX = par.x;\r\n            const canoCeuY = yRandom;\r\n            // [Cano do Céu]\r\n            Config.Draw({\r\n                spriteX: this.ceu.spriteX,\r\n                spriteY: this.ceu.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoCeuX,\r\n                y: canoCeuY,\r\n            })\r\n            // [Cano do Chão]\r\n            const canoChaoX = par.x;\r\n            const canoChaoY = this.altura + this.espaco + yRandom;\r\n            Config.Draw({\r\n                spriteX: this.chao.spriteX,\r\n                spriteY: this.chao.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoChaoX,\r\n                y: canoChaoY,\r\n            });\r\n            par.canoCeu = {\r\n                x: canoCeuX,\r\n                y: this.altura + canoCeuY\r\n            }\r\n            par.canoChao = {\r\n                x: canoChaoX,\r\n                y: canoChaoY\r\n            }\r\n        })\r\n    };\r\n    temColisaoComOFlappyBird(par: Interface.Utils.Dimensoes, _flappyBird: Interface.Elements.IFlappybird) {\r\n        const Desconto = 2;\r\n        const cabecaDoFlappy = _flappyBird.y - Desconto;\r\n        const peDoFlappy = _flappyBird.y + _flappyBird.altura - Desconto;\r\n\r\n        if ((_flappyBird.x + _flappyBird.largura) >= par.x) {\r\n            if (cabecaDoFlappy <= (par.canoCeu.y - Desconto) || peDoFlappy >= par.canoChao.y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    atualiza(action: Function, _flappyBird: Interface.Elements.IFlappybird, _placar: Interface.Elements.IPlacar) {\r\n\r\n        const _Frames = intervaloFrames[Config.Method.randomIntFromInterval(0, intervaloFrames.length - 1)]\r\n        const passouFrames = Config.frames % _Frames == 0;\r\n        if (passouFrames)\r\n            this.pares.push({\r\n                x: Config.canvas.width,\r\n                y: -150 * (Math.random() + 1),\r\n            });\r\n\r\n        for (let par of this.pares) {\r\n            const currentPoint = Storage.Get<number>(Config.KeyNameStorage.currentPoint) || 0;\r\n            par.x = par.x - Velocidades.dispach(currentPoint);\r\n\r\n            if (this.temColisaoComOFlappyBird(par, _flappyBird)) {\r\n                Config.TrilhasSonoras.HIT().play();\r\n                action();\r\n            }\r\n\r\n            if (par.x + this.largura <= 0) {\r\n                this.pares.shift();\r\n                _placar.atualiza();\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst intervaloFrames = [\r\n    150\r\n]\r\nconst dificuldade_velocidade = {\r\n    \"20\": 2,\r\n    \"40\": 2.5,\r\n    \"80\": 4,\r\n    \"100\": 4.5,\r\n    \"110\": 5,\r\n    \"120\": 6,\r\n    \"130\": 7,\r\n    \"140\": 8,\r\n    \"150\": 9,\r\n    \"200\": 10\r\n}\r\nconst Velocidades = {\r\n    dispach: (pontuacao: number) => {\r\n        const keys = Object.keys(dificuldade_velocidade).map(itm => new Number(itm));\r\n        const field = keys.find(key => key >= pontuacao) || keys[keys.length - 1]\r\n        const difcultades = dificuldade_velocidade[field as keyof object];\r\n\r\n        return difcultades\r\n    },\r\n};\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nexport class PlanoDeFundo implements Interface.Utils.IBaseModel {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        this.spriteX = 390;\r\n        this.spriteY = 0;\r\n        this.largura = 275;\r\n        this.altura = 204;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 204;\r\n\r\n    }\r\n    desenha() {\r\n        Config.contexto.fillStyle = '#70c5ce';\r\n        Config.contexto.fillRect(0, 0, Config.canvas.width, Config.canvas.height)\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        })\r\n    }\r\n    atualiza(): void {\r\n    }\r\n\r\n}\r\n","import { Config } from \"../config\";\r\nimport { Interface } from \"../interface/base\";\r\nimport { Storage } from \"../storage\";\r\n\r\nexport class Placar implements Interface.Elements.IPlacar {\r\n    pontuacao: number = 0;\r\n\r\n    desenha() {\r\n        Config.contexto.font = '35px \"VT323\"';\r\n        Config.contexto.textAlign = 'right';\r\n        Config.contexto.fillStyle = 'white';\r\n        Config.contexto.fillText(`${this.pontuacao}`, Config.canvas.width - 10, 35);\r\n\r\n        Storage.Set(Config.KeyNameStorage.lastPoint, this.pontuacao)\r\n\r\n        const bestP = Storage.Get<number>(Config.KeyNameStorage.bestPoint),\r\n            lastP = Storage.Get<number>(Config.KeyNameStorage.lastPoint);\r\n        if (lastP > bestP)\r\n            Storage.Set(Config.KeyNameStorage.bestPoint, this.pontuacao)\r\n\r\n    };\r\n    atualiza() {\r\n        Config.TrilhasSonoras.PONTO().play();\r\n        this.pontuacao = this.pontuacao + 1;\r\n        Storage.Set(Config.KeyNameStorage.currentPoint, this.pontuacao);\r\n    }\r\n}\r\n\r\n\r\nexport class MainScoreGame implements Interface.Utils.IScoreMain {\r\n    none: Interface.Utils.IScore;\r\n    bronze: Interface.Utils.IScore;\r\n    prata: Interface.Utils.IScore;\r\n    ouro: Interface.Utils.IScore;\r\n    constructor() {\r\n        const X_In_Screen = (Config.canvas.width / 2) / 2.4,\r\n            Y_In_Screen = 135;\r\n        this.none = new Score(0, 78, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.bronze = new Score(48, 124, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.prata = new Score(48, 78, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.ouro = new Score(0, 124, 44, 44, X_In_Screen, Y_In_Screen);\r\n    }\r\n    desenha() {\r\n        const pontuacaoAtual = Storage.Get<number>(Config.KeyNameStorage.lastPoint),\r\n            bestPontuacao = Storage.Get<number>(Config.KeyNameStorage.bestPoint);\r\n        const X_In_Screen = (Config.canvas.width / 3) * 2.4,\r\n            Y_In_Screen = (Config.canvas.width / 3) * 1.9\r\n        Config.contexto.fillText(`${pontuacaoAtual}`, X_In_Screen, 147);\r\n        Config.contexto.fillText(`${bestPontuacao}`, X_In_Screen, Y_In_Screen);\r\n        if (pontuacaoAtual < 50) {\r\n            this.none.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 100) {\r\n            this.bronze.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 150) {\r\n            this.prata.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual >= 200) {\r\n            this.ouro.desenha();\r\n            return;\r\n        }\r\n    }\r\n    \r\n\r\n}\r\nclass Score implements Interface.Utils.IScore {\r\n    constructor(\r\n        _spriteX: number,\r\n        _spriteY: number,\r\n        _largura: number,\r\n        _altura: number,\r\n        _x: number,\r\n        _y: number) {\r\n        this.spriteX = _spriteX\r\n        this.spriteY = _spriteY\r\n        this.largura = _largura\r\n        this.altura = _altura\r\n        this.x = _x\r\n        this.y = _y\r\n    }\r\n    desenha(): void {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n    }\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n}"],"names":["Storage","Config","Game","Jogo","Set","key","value","localStorage","setItem","JSON","stringify","Get","getItem","parse","canvas","document","querySelector","contexto","getContext","frames","KeyNameStorage","lastPoint","bestPoint","currentPoint","isDeveloper","includes","window","location","hostname","TrilhasSonoras","HIT","Audio","PULO","CAIU","PONTO","sprites","Image","src","Draw","drawImage","Model","spriteX","spriteY","largura","altura","x","y","fazColisao","a","b","aY","Method","randomIntFromInterval","min","max","Math","floor","random","ClearMemory","FlappyBird","frameAtual","gravidade","velocidade","pulo","pula","play","this","movimentos","atualizaOFrameAtual","incremento","baseRepeticao","length","desenha","atualiza","action","_engine","chao","Chao","constructor","height","repeteEm","movimentacao","Cano","espaco","ceu","pares","forEach","yRandom","par","canoCeuX","canoCeuY","canoChaoX","canoChaoY","canoCeu","canoChao","temColisaoComOFlappyBird","_flappyBird","cabecaDoFlappy","peDoFlappy","_placar","_Frames","intervaloFrames","push","width","Velocidades","dispach","shift","dificuldade_velocidade","20","40","80","100","110","120","130","140","150","200","keys","Object","map","itm","Number","field","find","pontuacao","PlanoDeFundo","fillStyle","fillRect","Placar","font","textAlign","fillText","MainScoreGame","none","bronze","prata","ouro","X_In_Screen","Score","pontuacaoAtual","bestPontuacao","Y_In_Screen","_spriteX","_spriteY","_largura","_altura","_x","_y","Main","Engine","mudaParaTela","page","TelaAtiva","inicializa","TelaCondicional","Telas","INICIO","flappyBird","canos","mensagemGetReady","click","JOGO","placar","GAME_OVER","mensagemGameOver","loop","requestAnimationFrame","PageEvents","getElementById","addEventListener","e"],"mappings":"AAAM,IAAWA,QCGAC,OCKAC,KCLPC,KHHV,CAAA,SAAiBH,GACGA,EAAAI,IAAhB,SAAoBC,EAAaC,GAE7BC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,CAAK,CAAC,CAClD,EACeN,EAAAW,IAAhB,SAAuBN,GAGnB,OAFMC,EAAQC,aAAaK,QAAQP,CAAG,GAG3BI,KAAKI,MAAMP,CAAK,EAEpB,EACV,CACJ,EAbgBN,QAAAA,SAahB,EAAA,ECVD,SAAiBC,GACAA,EAAAa,OAASC,SAASC,cAAc,QAAQ,EACxCf,EAAQgB,SAAGhB,EAAAa,OAAOI,WAAW,IAAI,EAEnCjB,EAAMkB,OAAG,EACPlB,EAAAmB,eAAiB,CAC1BC,UAAW,kBACXC,UAAW,kBACXC,aAAc,mBAGlB,MAAMC,EADc,CAAC,YAAa,aACFC,SAASC,OAAOC,SAASC,QAAQ,EAEpD3B,EAAA4B,eAAiB,CAC1BC,IAAO,IAAM,IAAIC,SAAwB,GAAfP,EAAuB,kBAAoB,6BAA6B,EAClGQ,KAAQ,IAAM,IAAID,SAAwB,GAAfP,EAAuB,kBAAoB,8BAA8B,EACpGS,KAAQ,IAAM,IAAIF,SAAwB,GAAfP,EAAuB,kBAAoB,8BAA8B,EACpGU,MAAS,IAAM,IAAIH,SAAwB,GAAfP,EAAuB,kBAAoB,+BAA+B,GAE7FvB,EAAAkC,QAAU,IAAIC,MAC3BnC,EAAAkC,QAAQE,OAAwB,GAAfb,EAAuB,kBAAoB,kCAC/CvB,EAAAqC,KAAO,IAChBrC,EAAAgB,SAASsB,UACLtC,EAAOkC,QACPK,EAAMC,QAASD,EAAME,QACrBF,EAAMG,QAASH,EAAMI,OACrBJ,EAAMK,EAAGL,EAAMM,EACfN,EAAMG,QAASH,EAAMI,MAAM,CAEnC,EAEgB3C,EAAA8C,WAAhB,SAA2BC,EAA+BC,GAItD,OAFMC,EAAKF,EAAEF,EAAIE,EAAEJ,OACRK,EAAEH,GACNI,CACV,CAEJ,EAtCgBjD,OAAAA,QAsChB,EAAA,EACD,SAAiBA,GAAO,IAAAkD,GAAAA,EAAAlD,EAAMkD,SAANlD,SAQvB,KAPmBmD,sBAAhB,SAAsCC,EAAaC,GAC/C,OAAOC,KAAKC,MAAMD,KAAKE,OAAM,GAAMH,EAAMD,EAAM,GAAKA,CAAG,CAC1D,EACeF,EAAAO,YAAhB,WACIzD,EAAAkB,OAAS,EACTnB,QAAQI,IAAIH,EAAAmB,eAAeG,aAAc,CAAC,CAC7C,CACJ,EARgBtB,OAAAA,QAQhB,EAAA,QG/CY0D,WACFC,WAAqB,EACrBnB,QAAkB,EAClBC,QAAkB,EAClBC,QAAkB,GAClBC,OAAiB,GACjBC,EAAY,GACZC,EAAY,GACZe,UAAoB,IACpBC,WAAqB,EACrBC,KAAe,EACtBC,OACI/D,OAAO4B,eAAeG,KAAM,EAACiC,KAAI,EACjCC,KAAKJ,WAAa,CAAEI,KAAKH,IAC5B,CACDI,WAA0C,CACtC,CAAE1B,QAAS,EAAGC,QAAS,CAAI,EAC3B,CAAED,QAAS,EAAGC,QAAS,EAAK,EAC5B,CAAED,QAAS,EAAGC,QAAS,EAAK,EAC5B,CAAED,QAAS,EAAGC,QAAS,EAAK,GAEhC0B,sBACI,IAKUC,EACAC,EALerE,OAAOkB,OADN,IACqC,IAIrDkD,EADmB,EACaH,KAAKN,WACrCU,EAAgBJ,KAAKC,WAAWI,OACtCL,KAAKN,WAAaS,EAAaC,EAEtC,CACDE,QAAoB,KAChBN,KAAKE,oBAAmB,EACxB,GAAM,CAAE3B,QAAAA,EAASC,QAAAA,CAAS,EAAGwB,KAAKC,WAAWD,KAAKN,YAClD3D,OAAOqC,KAAK,CACRG,QAASA,EACTC,QAASA,EACTE,OAAQsB,KAAKtB,OACbD,QAASuB,KAAKvB,QACdE,EAAGqB,KAAKrB,EACRC,EAAGoB,KAAKpB,CACX,CAAA,CACL,EACA2B,SAASC,EAAkBC,GAEnB1E,OAAO8C,WAAWmB,KAAMS,EAAQC,IAAI,GACpC3E,OAAO4B,eAAeI,KAAM,EAACgC,KAAI,EACjCS,MAGJR,KAAKJ,WAAaI,KAAKJ,WAAaI,KAAKL,UACzCK,KAAKpB,EAAIoB,KAAKpB,EAAIoB,KAAKJ,WAC1B,CACJ,OCtDYe,KACTpC,QACAC,QACAC,QACAC,OACAC,EACAC,EAEAgC,cACIZ,KAAKzB,QAAU,EACfyB,KAAKxB,QAAU,IACfwB,KAAKvB,QAAU,IACfuB,KAAKtB,OAAS,IACdsB,KAAKrB,EAAI,EACTqB,KAAKpB,EAAI7C,OAAOa,OAAOiE,OAAS,GAEnC,CACDN,WACI,IACMO,EAAWd,KAAKvB,QAAU,EAC1BsC,EAAef,KAAKrB,EAFF,EAGxBqB,KAAKrB,EAAIoC,EAAeD,CAC3B,CACDR,UACIvE,OAAOqC,KAAK,CACRG,QAASyB,KAAKzB,QACdC,QAASwB,KAAKxB,QACdC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAGqB,KAAKrB,EACRC,EAAGoB,KAAKpB,CACX,CAAA,EACD7C,OAAOqC,KAAK,CACRG,QAASyB,KAAKzB,QACdC,QAASwB,KAAKxB,QACdC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAIqB,KAAKrB,EAAIqB,KAAKvB,QAClBG,EAAGoB,KAAKpB,CACX,CAAA,CACJ,CACJ,OCvCYoC,KACTvC,QACAC,OACAuC,OACAP,KACAQ,IACAC,MACAP,cACIZ,KAAKvB,QAAU,GACfuB,KAAKtB,OAAS,IACdsB,KAAKiB,OAAS,GACdjB,KAAKU,KAAO,CACRnC,QAAS,EACTC,QAAS,KAEbwB,KAAKkB,IAAM,CACP3C,QAAS,GACTC,QAAS,KAEbwB,KAAKmB,MAAQ,EAChB,CACDb,UACIN,KAAKmB,MAAMC,QAAQ,IACf,IAAMC,EAAUC,EAAI1C,EACd2C,EAAWD,EAAI3C,EACf6C,EAAWH,EAWXI,GATN1F,OAAOqC,KAAK,CACRG,QAASyB,KAAKkB,IAAI3C,QAClBC,QAASwB,KAAKkB,IAAI1C,QAClBC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAG4C,EACH3C,EAAG4C,CACN,CAAA,EAEiBF,EAAI3C,GAChB+C,EAAY1B,KAAKtB,OAASsB,KAAKiB,OAASI,EAC9CtF,OAAOqC,KAAK,CACRG,QAASyB,KAAKU,KAAKnC,QACnBC,QAASwB,KAAKU,KAAKlC,QACnBC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAG8C,EACH7C,EAAG8C,CACN,CAAA,EACDJ,EAAIK,QAAU,CACVhD,EAAG4C,EACH3C,EAAGoB,KAAKtB,OAAS8C,GAErBF,EAAIM,SAAW,CACXjD,EAAG8C,EACH7C,EAAG8C,EAEX,CAAC,CACJ,CACDG,yBAAyBP,EAAgCQ,GACrD,IACMC,EAAiBD,EAAYlD,EADlB,EAEXoD,EAAaF,EAAYlD,EAAIkD,EAAYpD,OAF9B,EAIjB,OAAKoD,EAAYnD,EAAImD,EAAYrD,SAAY6C,EAAI3C,IACzCoD,GAAmBT,EAAIK,QAAQ/C,EALtB,GAKuCoD,GAAcV,EAAIM,SAAShD,EAKtF,CACD2B,SAASC,EAAkBsB,EAA6CG,GAEpE,IAQSX,EARHY,EAAUC,gBAAgBpG,OAAOkD,OAAOC,sBAAsB,EAAGiD,gBAAgB9B,OAAS,CAAC,GAC5EtE,OAAOkB,OAASiF,GAAW,GAE5ClC,KAAKmB,MAAMiB,KAAK,CACZzD,EAAG5C,OAAOa,OAAOyF,MACjBzD,EAAG,CAAC,KAAOS,KAAKE,OAAM,EAAK,EAC9B,CAAA,EAEL,IAAS+B,KAAOtB,KAAKmB,MAAO,CACxB,IAAM9D,EAAevB,QAAQW,IAAYV,OAAOmB,eAAeG,YAAY,GAAK,EAChFiE,EAAI3C,EAAI2C,EAAI3C,EAAI2D,YAAYC,QAAQlF,CAAY,EAE5C2C,KAAK6B,yBAAyBP,EAAKQ,CAAW,IAC9C/F,OAAO4B,eAAeC,IAAK,EAACmC,KAAI,EAChCS,KAGAc,EAAI3C,EAAIqB,KAAKvB,SAAW,IACxBuB,KAAKmB,MAAMqB,QACXP,EAAQ1B,SAAQ,EAEvB,CAEJ,CACJ,CAED,MAAM4B,gBAAkB,CACpB,KAEEM,uBAAyB,CAC3BC,GAAM,EACNC,GAAM,IACNC,GAAM,EACNC,IAAO,IACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,IAELb,YAAc,CAChBC,QAAS,IACL,IAAMa,EAAOC,OAAOD,KAAKX,sBAAsB,EAAEa,IAAIC,GAAO,IAAIC,OAAOD,CAAG,CAAC,EACrEE,EAAQL,EAAKM,KAAKvH,GAAcwH,GAAPxH,CAAgB,GAAKiH,EAAKA,EAAK/C,OAAS,GAGvE,OAFoBoC,uBAAuBgB,EAG9C,SCzHQG,aACTrF,QACAC,QACAC,QACAC,OACAC,EACAC,EAIAgC,cACIZ,KAAKzB,QAAU,IACfyB,KAAKxB,QAAU,EACfwB,KAAKvB,QAAU,IACfuB,KAAKtB,OAAS,IACdsB,KAAKrB,EAAI,EACTqB,KAAKpB,EAAI7C,OAAOa,OAAOiE,OAAS,GAEnC,CACDP,UACIvE,OAAOgB,SAAS8G,UAAY,UAC5B9H,OAAOgB,SAAS+G,SAAS,EAAG,EAAG/H,OAAOa,OAAOyF,MAAOtG,OAAOa,OAAOiE,MAAM,EACxE9E,OAAOqC,KAAK,CACRG,QAASyB,KAAKzB,QACdC,QAASwB,KAAKxB,QACdC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAGqB,KAAKrB,EACRC,EAAGoB,KAAKpB,CACX,CAAA,EACD7C,OAAOqC,KAAK,CACRG,QAASyB,KAAKzB,QACdC,QAASwB,KAAKxB,QACdC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAIqB,KAAKrB,EAAIqB,KAAKvB,QAClBG,EAAGoB,KAAKpB,CACX,CAAA,CACJ,CACD2B,YAGH,OCxCYwD,OACTJ,UAAoB,EAEpBrD,UACIvE,OAAOgB,SAASiH,KAAO,eACvBjI,OAAOgB,SAASkH,UAAY,QAC5BlI,OAAOgB,SAAS8G,UAAY,QAC5B9H,OAAOgB,SAASmH,SAAS,GAAGlE,KAAK2D,UAAa5H,OAAOa,OAAOyF,MAAQ,GAAI,EAAE,EAE1EvG,QAAQI,IAAIH,OAAOmB,eAAeC,UAAW6C,KAAK2D,SAAS,EAE7C7H,QAAQW,IAAYV,OAAOmB,eAAeE,SAAS,EACrDtB,QAAQW,IAAYV,OAAOmB,eAAeC,SAAS,GAE3DrB,QAAQI,IAAIH,OAAOmB,eAAeE,UAAW4C,KAAK2D,SAAS,CAElE,CACDpD,WACIxE,OAAO4B,eAAeK,MAAO,EAAC+B,KAAI,EAClCC,KAAK2D,UAAY3D,KAAK2D,UAAY,EAClC7H,QAAQI,IAAIH,OAAOmB,eAAeG,aAAc2C,KAAK2D,SAAS,CACjE,CACJ,OAGYQ,cACTC,KACAC,OACAC,MACAC,KACA3D,cACI,IAAM4D,EAAezI,OAAOa,OAAOyF,MAAQ,EAAK,IAEhDrC,KAAKoE,KAAO,IAAIK,MAAM,EAAG,GAAI,GAAI,GAAID,EADnB,GAC2C,EAC7DxE,KAAKqE,OAAS,IAAII,MAAM,GAAI,IAAK,GAAI,GAAID,EAFvB,GAE+C,EACjExE,KAAKsE,MAAQ,IAAIG,MAAM,GAAI,GAAI,GAAI,GAAID,EAHrB,GAG6C,EAC/DxE,KAAKuE,KAAO,IAAIE,MAAM,EAAG,IAAK,GAAI,GAAID,EAJpB,GAI4C,CACjE,CACDlE,UACI,IAAMoE,EAAiB5I,QAAQW,IAAYV,OAAOmB,eAAeC,SAAS,EACtEwH,EAAgB7I,QAAQW,IAAYV,OAAOmB,eAAeE,SAAS,EACjEoH,EAAezI,OAAOa,OAAOyF,MAAQ,EAAK,IAC5CuC,EAAe7I,OAAOa,OAAOyF,MAAQ,EAAK,IAC9CtG,OAAOgB,SAASmH,SAAS,GAAGQ,EAAkBF,EAAa,GAAG,EAC9DzI,OAAOgB,SAASmH,SAAS,GAAGS,EAAiBH,EAAaI,CAAW,EACjEF,EAAiB,GACjB1E,KAAKoE,KAAK9D,UAGVoE,GAAkB,IAClB1E,KAAKqE,OAAO/D,UAGZoE,GAAkB,IAClB1E,KAAKsE,MAAMhE,UAGO,KAAlBoE,GACA1E,KAAKuE,KAAKjE,SAGjB,CAGJ,OACKmE,MACF7D,YACIiE,EACAC,EACAC,EACAC,EACAC,EACAC,GACAlF,KAAKzB,QAAUsG,EACf7E,KAAKxB,QAAUsG,EACf9E,KAAKvB,QAAUsG,EACf/E,KAAKtB,OAASsG,EACdhF,KAAKrB,EAAIsG,EACTjF,KAAKpB,EAAIsG,CACZ,CACD5E,UACIvE,OAAOqC,KAAK,CACRG,QAASyB,KAAKzB,QACdC,QAASwB,KAAKxB,QACdC,QAASuB,KAAKvB,QACdC,OAAQsB,KAAKtB,OACbC,EAAGqB,KAAKrB,EACRC,EAAGoB,KAAKpB,CACX,CAAA,CACJ,CACDL,QACAC,QACAC,QACAC,OACAC,EACAC,CAEH,CN7FD,CAAA,SAAiB5C,GAAK,CAAA,IAAAmJ,EAAAnJ,EAAImJ,OAAJnJ,OA0HrB,IAzHG,MAAMoJ,EAAkC,GA+DxC,SAAgBC,EAAaC,GACzBH,EAAAI,UAAYD,EACZH,EAAAI,UAAUC,YACb,CACD,SAAgBC,EAAgBH,GAC5B,MAAO,KACHH,EAAAI,UAAYD,EACZH,EAAAI,UAAUC,YACd,CACH,CAvEYL,EAAAO,MAA+B,CACxCC,OAAQ,CACJH,aACIJ,EAAOQ,WAAa,IAAInG,WACxB2F,EAAO1E,KAAO,IAAIC,KAClByE,EAAOS,MAAQ,IAAI7E,IACtB,EACDV,WACI,IAAIsD,cAAetD,UAEnB8E,EAAOQ,WAAWtF,UAElB8E,EAAO1E,KAAKJ,UAEZwF,EAAiBxF,QAAO,CAC3B,EACDyF,QACIV,EAAaF,EAAAO,MAAMM,IAAI,CAC1B,EACDzF,WAEI6E,EAAO1E,KAAKH,UACf,CACJ,EACDyF,KAAM,CACFR,aACIJ,EAAOa,OAAS,IAAIlC,MACvB,EACDzD,WACI,IAAIsD,cAAetD,UACnB8E,EAAOS,MAAMvF,UACb8E,EAAO1E,KAAKJ,UACZ8E,EAAOQ,WAAWtF,UAClB8E,EAAOa,OAAO3F,SACjB,EACDyF,QACIX,EAAOQ,WAAW9F,MACrB,EACDS,WACI6E,EAAOS,MAAMtF,SAASkF,EAAgBN,EAAAO,MAAMQ,SAAS,EAAGd,EAAOQ,WAAYR,EAAOa,MAAM,EACxFb,EAAO1E,KAAKH,WACZ6E,EAAOQ,WAAWrF,SAASkF,EAAgBN,EAAAO,MAAMQ,SAAS,EAAGd,CAAM,CACtE,CACJ,EACDc,UAAW,CACPV,eAEAlF,UACQ6F,EAAiB7F,SACjB6F,EAAiB7F,QAAO,GAE5B,IAAI6D,eAAgB7D,SACvB,EACDC,aAGAwF,QACIV,EAAaF,EAAAO,MAAMC,MAAM,CAC5B,CACJ,GAGWR,EAAAE,eAIAF,EAAAM,kBAMLN,EAAAI,UAAuC,CAC9CQ,MAAO,OAEPxF,SAAU,OAEVD,QAAS,OAETkF,WAAY,QAIhB,MAAMM,EAAgD,CAClDvH,QAAS,IACTC,QAAS,EACTC,QAAS,IACTC,OAAQ,IACRC,EAAI5C,OAAOa,OAAOyF,MAAQ,EAAK,GAC/BzD,EAAG,GACH0B,UACIvE,OAAOqC,KAAK,CACRG,QAASuH,EAAiBvH,QAC1BC,QAASsH,EAAiBtH,QAC1BC,QAASqH,EAAiBrH,QAC1BC,OAAQoH,EAAiBpH,OACzBC,EAAGmH,EAAiBnH,EACpBC,EAAGkH,EAAiBlH,CACvB,CAAA,CACJ,GAECuH,EAAgD,CAClD5H,QAAS,IACTC,QAAS,IACTC,QAAS,IACTC,OAAQ,IACRC,EAAI5C,OAAOa,OAAOyF,MAAQ,EAAK,IAC/BzD,EAAG,GACH0B,UACIvE,OAAOqC,KAAK,CACRG,QAAS4H,EAAiB5H,QAC1BC,QAAS2H,EAAiB3H,QAC1BC,QAAS0H,EAAiB1H,QAC1BC,OAAQyH,EAAiBzH,OACzBC,EAAGwH,EAAiBxH,EACpBC,EAAGuH,EAAiBvH,CACvB,CAAA,EACD7C,OAAOkD,OAAOO,aACjB,EAER,CAAA,EA1HgBxD,KAAAA,MA0HhB,EAAA,EC/HD,SAAUC,GAiBN,SAASmK,IACLpK,KAAKmJ,KAAKI,UAAUjF,UACpBtE,KAAKmJ,KAAKI,UAAUhF,WACpBxE,OAAOkB,QAAU,EACjBoJ,sBAAsBD,CAAI,CAC7B,EAtBUnK,EAAUqK,aAAVrK,aAuBd,KArBmBkJ,KAAhB,WAEItI,SAAS0J,eAAe,aAAa,EAAEC,iBAAiB,QAAS,WACzDxK,KAAKmJ,KAAKI,UAAUQ,OACpB/J,KAAKmJ,KAAKI,UAAUQ,OAE5B,CAAC,EAEDvI,OAAOgJ,iBAAiB,WAAY,SAAUC,GACtCzK,KAAKmJ,KAAKI,UAAUQ,OACpB/J,KAAKmJ,KAAKI,UAAUQ,OAC5B,CAAC,EACD/J,KAAKmJ,KAAKE,aAAarJ,KAAKmJ,KAAKO,MAAMC,MAAM,EAC7CS,GACH,CAOJ,EAvBSnK,KAAAA,MAuBT,EAAA,EAEDA,KAAKqK,WAAWnB,KAAM"}