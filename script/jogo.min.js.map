{"version":3,"file":"jogo.min.js","sources":["../ts/config/index.ts","../ts/storage/index.ts","../ts/game/index.ts","../ts/jogo.ts","../ts/elements/flappybird.ts","../ts/elements/chao.ts","../ts/elements/cano.ts","../ts/elements/plano_fundo.ts","../ts/elements/placar.ts"],"sourcesContent":["import { IBaseModel } from \"../interface/base\";\r\n\r\nexport namespace Config {\r\n    export const canvas = document.querySelector('canvas') as HTMLCanvasElement;\r\n    export const contexto = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    export let frames = 0;\r\n    export const KeyNameStorage = {\r\n        lastPoint: 'FlappyBird1.0Lp',\r\n        bestPoint: 'FlappyBird1.0bp'\r\n    }\r\n    const hostnameDev = ['localhost', '127.0.0.1']\r\n    const isDeveloper = hostnameDev.includes(window.location.hostname);\r\n\r\n    export const TrilhasSonoras = {\r\n        \"HIT\": () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/hit.wav`),\r\n        'PULO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/pulo.wav`),\r\n        'CAIU': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/caiu.wav`),\r\n        'PONTO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/ponto.wav`)\r\n    }\r\n    export const sprites = new Image();\r\n    sprites.src = `${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/texture/sprites.png`;\r\n    export const Draw = (Model: IBaseModel) => {\r\n        contexto.drawImage(\r\n            Config.sprites,\r\n            Model.spriteX, Model.spriteY,\r\n            Model.largura, Model.altura,\r\n            Model.x, Model.y,\r\n            Model.largura, Model.altura,\r\n        )\r\n    }\r\n\r\n    export function fazColisao(a: IBaseModel, b: IBaseModel) {\r\n\r\n        const aY = a.y + a.altura;\r\n        const bY = b.y;\r\n        return aY >= bY;\r\n    }\r\n\r\n}","export namespace Storage {\r\n    export function Set(key: string, value: any) {\r\n\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n    export function Get<T>(key: string): T {\r\n        const value = localStorage.getItem(key);\r\n\r\n        if (value)\r\n            return JSON.parse(value) as T;\r\n\r\n        return \"\" as T\r\n    }\r\n}","import { Globais, IBaseModel, IPageGame, Pages } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nimport { flappyBird } from \"../elements/flappybird\";\r\nimport { Chao } from '../elements/chao';\r\nimport { Cano } from '../elements/cano';\r\nimport { PlanoDeFundo } from '../elements/plano_fundo';\r\nimport { Placar, ScoreGame } from '../elements/placar';\r\nexport namespace Game.Main {\r\n    export const Engine: Globais = {}\r\n    export const Telas: Pages = {\r\n        INICIO: {\r\n            inicializa() {\r\n                Engine.flappyBird = new flappyBird(Engine);\r\n                Engine.chao = new Chao();\r\n                Engine.canos = new Cano(Engine.flappyBird);\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n                //@ts-ignore\r\n                Engine.flappyBird.desenha();\r\n                //@ts-ignore\r\n                Engine.chao.desenha();\r\n                //@ts-ignore\r\n                mensagemGetReady.desenha();\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.JOGO);\r\n            },\r\n            atualiza() {\r\n                //@ts-ignore\r\n                Engine.chao.atualiza();\r\n            }\r\n        },\r\n        JOGO: {\r\n            inicializa() {\r\n                Engine.placar = new Placar();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n                //@ts-ignore\r\n                Engine.canos.desenha();\r\n                //@ts-ignore\r\n                Engine.chao.desenha();\r\n                //@ts-ignore\r\n                Engine.flappyBird.desenha();\r\n                //@ts-ignore\r\n                Engine.placar.desenha();\r\n            },\r\n            click() {\r\n                //@ts-ignore\r\n                Engine.flappyBird.pula();\r\n            },\r\n            atualiza() {\r\n                //@ts-ignore\r\n                Engine.canos.atualiza(TelaCondicional(Telas.GAME_OVER));\r\n                //@ts-ignore\r\n                Engine.chao.atualiza();\r\n                //@ts-ignore\r\n                Engine.flappyBird.atualiza(TelaCondicional(Telas.GAME_OVER));\r\n                //@ts-ignore\r\n                Engine.placar.atualiza();\r\n            }\r\n        },\r\n        GAME_OVER: {\r\n            inicializa() {\r\n            },\r\n            desenha() {\r\n                if (mensagemGameOver.desenha)\r\n                    mensagemGameOver.desenha();\r\n\r\n                ScoreGame.desenha();\r\n            },\r\n            atualiza() {\r\n\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.INICIO);\r\n            }\r\n        }\r\n    }\r\n\r\n    export function mudaParaTela(page: IPageGame) {\r\n        TelaAtiva = page;\r\n        if (TelaAtiva.inicializa)\r\n            TelaAtiva.inicializa();\r\n    }\r\n    export function TelaCondicional(page: IPageGame) {\r\n        return () => {\r\n            TelaAtiva = page;\r\n            if (TelaAtiva.inicializa)\r\n                TelaAtiva.inicializa();\r\n        }\r\n    }\r\n    export let TelaAtiva: IPageGame = {\r\n        click: () => {\r\n        },\r\n        atualiza: () => {\r\n        },\r\n        desenha: () => {\r\n        },\r\n        inicializa: () => {\r\n        }\r\n    }\r\n\r\n    const mensagemGetReady: IBaseModel = {\r\n        spriteX: 134,\r\n        spriteY: 0,\r\n        largura: 174,\r\n        altura: 152,\r\n        x: (Config.canvas.width / 2) - 174 / 2,\r\n        y: 50,\r\n        desenha: () => {\r\n            Config.Draw({\r\n                spriteX: mensagemGetReady.spriteX,\r\n                spriteY: mensagemGetReady.spriteY,\r\n                largura: mensagemGetReady.largura,\r\n                altura: mensagemGetReady.altura,\r\n                x: mensagemGetReady.x,\r\n                y: mensagemGetReady.y\r\n            });\r\n        }\r\n    }\r\n    const mensagemGameOver: IBaseModel = {\r\n        spriteX: 134,\r\n        spriteY: 153,\r\n        largura: 226,\r\n        altura: 200,\r\n        x: (Config.canvas.width / 2) - 226 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGameOver.spriteX,\r\n                spriteY: mensagemGameOver.spriteY,\r\n                largura: mensagemGameOver.largura,\r\n                altura: mensagemGameOver.altura,\r\n                x: mensagemGameOver.x,\r\n                y: mensagemGameOver.y\r\n            })\r\n        }\r\n    }\r\n}","import { Config } from './config'\r\nimport { Game } from './game/index';\r\n\r\nnamespace Jogo.PageEvents {\r\n\r\n    export function Main() {\r\n\r\n        document.getElementById('game-canvas').addEventListener('click', function () {\r\n            if (Game.Main.TelaAtiva.click) {\r\n                Game.Main.TelaAtiva.click();\r\n            }\r\n        });\r\n        window.addEventListener('keypress', function (e: KeyboardEvent) {\r\n            if (Game.Main.TelaAtiva.click)\r\n                Game.Main.TelaAtiva.click()\r\n        })\r\n        Game.Main.mudaParaTela(Game.Main.Telas.INICIO);\r\n        loop();\r\n    }\r\n    function loop() {\r\n        Game.Main.TelaAtiva.desenha();\r\n        Game.Main.TelaAtiva.atualiza();\r\n        Config.frames = Config.frames + 1;\r\n        requestAnimationFrame(loop);\r\n    }\r\n}\r\n\r\nJogo.PageEvents.Main()","import { Globais, IFlappybird, Movimento } from '../interface/base'\r\nimport { Config } from '../config';\r\n\r\nexport class flappyBird implements IFlappybird {\r\n    _engine: Globais;\r\n    constructor(Engine: Globais) {\r\n        this._engine = Engine;\r\n    }\r\n    public frameAtual: number = 0;\r\n    public spriteX: number = 0;\r\n    public spriteY: number = 0;\r\n    public largura: number = 33;\r\n    public altura: number = 24;\r\n    public x: number = 10;\r\n    public y: number = 50;\r\n    public gravidade: number = 0.25;\r\n    public velocidade: number = 0;\r\n    public pulo: number = 4;\r\n    pula() {\r\n        Config.TrilhasSonoras.PULO().play();\r\n        this.velocidade = - this.pulo\r\n    };\r\n    movimentos: Movimento[] = [\r\n        { spriteX: 0, spriteY: 0, }, // asa pra cima\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n        { spriteX: 0, spriteY: 52, }, // asa pra baixo\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n    ];\r\n    atualizaOFrameAtual() {\r\n        const intervaloDeFrames = 10;\r\n        const passouOIntervalo = Config.frames % intervaloDeFrames === 0;\r\n\r\n        if (passouOIntervalo) {\r\n            const baseDoIncremento = 1;\r\n            const incremento = baseDoIncremento + this.frameAtual;\r\n            const baseRepeticao = this.movimentos.length;\r\n            this.frameAtual = incremento % baseRepeticao\r\n        }\r\n    };\r\n    desenha: Function = () => {\r\n        this.atualizaOFrameAtual();\r\n        const { spriteX, spriteY } = this.movimentos[this.frameAtual];\r\n        Config.Draw({\r\n            spriteX: spriteX,\r\n            spriteY: spriteY,\r\n            altura: this.altura,\r\n            largura: this.largura,\r\n            x: this.x,\r\n            y: this.y\r\n        });\r\n    };\r\n    atualiza: Function = (action: Function) => {\r\n        if (!this._engine.chao) return;\r\n        \r\n        if (Config.fazColisao(this, this._engine.chao)) {\r\n            Config.TrilhasSonoras.CAIU().play()\r\n            action();\r\n            return;\r\n        }\r\n        this.velocidade = this.velocidade + this.gravidade;\r\n        this.y = this.y + this.velocidade;\r\n    }\r\n}\r\n","import { IBaseModel } from \"../interface/base\";\r\nimport { Config } from '../config';\r\n\r\nexport class Chao implements IBaseModel {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.spriteX = 0;\r\n        this.spriteY = 610;\r\n        this.largura = 224;\r\n        this.altura = 112;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 112;\r\n\r\n    }\r\n    atualiza() {\r\n        const movimentoDoChao = 1;\r\n        const repeteEm = this.largura / 2;\r\n        const movimentacao = this.x - movimentoDoChao;\r\n        this.x = movimentacao % repeteEm;\r\n    }\r\n    desenha() {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        });\r\n    }\r\n}\r\n","import { Dimensoes, ICano, IFlappybird, Movimento } from \"../interface/base\";\r\nimport { Config } from '../config'\r\n\r\n\r\nexport class Cano implements ICano {\r\n    _flappyBird: IFlappybird\r\n    largura: number;\r\n    altura: number;\r\n    espaco: number;\r\n    chao: Movimento;\r\n    ceu: Movimento;\r\n    pares: Dimensoes[];\r\n    constructor(flappyBird: IFlappybird) {\r\n        this.largura = 52;\r\n        this.altura = 400;\r\n        this.espaco = 80;\r\n        this.chao = {\r\n            spriteX: 0,\r\n            spriteY: 169,\r\n        };\r\n        this.ceu = {\r\n            spriteX: 52,\r\n            spriteY: 169,\r\n        };\r\n        this.pares = [];\r\n        this._flappyBird = flappyBird;\r\n    }\r\n    desenha() {\r\n        this.pares.forEach((par) => {\r\n            const yRandom = par.y;\r\n            const espacamentoEntreCanos = 90;\r\n            const canoCeuX = par.x;\r\n            const canoCeuY = yRandom;\r\n            // [Cano do Céu]\r\n            Config.Draw({\r\n                spriteX: this.ceu.spriteX,\r\n                spriteY: this.ceu.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoCeuX,\r\n                y: canoCeuY,\r\n            })\r\n            // [Cano do Chão]\r\n            const canoChaoX = par.x;\r\n            const canoChaoY = this.altura + espacamentoEntreCanos + yRandom;\r\n            Config.Draw({\r\n                spriteX: this.chao.spriteX,\r\n                spriteY: this.chao.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoChaoX,\r\n                y: canoChaoY,\r\n            });\r\n            par.canoCeu = {\r\n                x: canoCeuX,\r\n                y: this.altura + canoCeuY\r\n            }\r\n            par.canoChao = {\r\n                x: canoChaoX,\r\n                y: canoChaoY\r\n            }\r\n        })\r\n    };\r\n    temColisaoComOFlappyBird(par: Dimensoes, _flappyBird: IFlappybird) {\r\n\r\n        const cabecaDoFlappy = _flappyBird.y;\r\n        const peDoFlappy = _flappyBird.y + _flappyBird.altura;\r\n        if ((_flappyBird.x + _flappyBird.largura) >= par.x) {\r\n            ///@ts-ignore\r\n            if (cabecaDoFlappy <= par.canoCeu.y || peDoFlappy >= par.canoChao.y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    atualiza(action: Function) {\r\n        const passou100Frames = Config.frames % 100 === 0;\r\n        if (passou100Frames) {\r\n            this.pares.push({\r\n                x: Config.canvas.width,\r\n                y: -150 * (Math.random() + 1),\r\n            });\r\n        }\r\n\r\n        this.pares.forEach((par) => {\r\n            par.x = par.x - 2;\r\n\r\n            if (this.temColisaoComOFlappyBird(par, this._flappyBird)) {\r\n                Config.TrilhasSonoras.HIT().play();\r\n                action();\r\n            }\r\n\r\n            if (par.x + this.largura <= 0) {\r\n                this.pares.shift();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","import { IBaseModel } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nexport class PlanoDeFundo implements IBaseModel {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        this.spriteX = 390;\r\n        this.spriteY = 0;\r\n        this.largura = 275;\r\n        this.altura = 204;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 204;\r\n\r\n    }\r\n    desenha() {\r\n        Config.contexto.fillStyle = '#70c5ce';\r\n        Config.contexto.fillRect(0, 0, Config.canvas.width, Config.canvas.height)\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        })\r\n    }\r\n    atualiza(): void {\r\n    }\r\n\r\n}\r\n","import { Config } from \"../config\";\r\nimport { IBaseModel } from \"../interface/base\";\r\nimport { Storage } from \"../storage\";\r\n\r\nexport class Placar {\r\n    pontuacao: number = 0;\r\n    desenha() {\r\n        Config.contexto.font = '35px \"VT323\"';\r\n        Config.contexto.textAlign = 'right';\r\n        Config.contexto.fillStyle = 'white';\r\n        Config.contexto.fillText(`${this.pontuacao}`, Config.canvas.width - 10, 35);\r\n\r\n        Storage.Set(Config.KeyNameStorage.lastPoint, this.pontuacao)\r\n\r\n        let bestP = Storage.Get<number>(Config.KeyNameStorage.bestPoint),\r\n            lastP = Storage.Get<number>(Config.KeyNameStorage.lastPoint);\r\n        if (lastP > bestP)\r\n            Storage.Set(Config.KeyNameStorage.bestPoint, this.pontuacao)\r\n\r\n    };\r\n    atualiza() {\r\n        const intervaloDeFrames = 30;\r\n        const passouOIntervalo = Config.frames % intervaloDeFrames === 0;\r\n\r\n        if (passouOIntervalo) {\r\n            Config.TrilhasSonoras.PONTO().play();\r\n            this.pontuacao = this.pontuacao + 1;\r\n        }\r\n    }\r\n\r\n}\r\nexport class ScoreGame {\r\n    constructor() {\r\n        ScoreGame.none = {\r\n            spriteX: 0,\r\n            spriteY: 78,\r\n            largura: 44,\r\n            altura: 44,\r\n            x: (Config.canvas.width / 2) / 2.4,\r\n            y: 135,\r\n            desenha() {\r\n                Config.Draw({\r\n                    spriteX: ScoreGame.none.spriteX,\r\n                    spriteY: ScoreGame.none.spriteY,\r\n                    largura: ScoreGame.none.largura,\r\n                    altura: ScoreGame.none.altura,\r\n                    x: ScoreGame.none.x,\r\n                    y: ScoreGame.none.y\r\n                })\r\n            }\r\n        }\r\n        ScoreGame.bronze = {\r\n\r\n            spriteX: 48,\r\n            spriteY: 124,\r\n            largura: 44,\r\n            altura: 44,\r\n            x: (Config.canvas.width / 2) / 2.4,\r\n            y: 135,\r\n            desenha() {\r\n                Config.Draw({\r\n                    spriteX: ScoreGame.bronze.spriteX,\r\n                    spriteY: ScoreGame.bronze.spriteY,\r\n                    largura: ScoreGame.bronze.largura,\r\n                    altura: ScoreGame.bronze.altura,\r\n                    x: ScoreGame.bronze.x,\r\n                    y: ScoreGame.bronze.y\r\n                })\r\n            }\r\n        }\r\n        ScoreGame.prata =\r\n        {\r\n            spriteX: 48,\r\n            spriteY: 78,\r\n            largura: 44,\r\n            altura: 44,\r\n            x: (Config.canvas.width / 2) / 2.4,\r\n            y: 135,\r\n            desenha() {\r\n                Config.Draw({\r\n                    spriteX: ScoreGame.prata.spriteX,\r\n                    spriteY: ScoreGame.prata.spriteY,\r\n                    largura: ScoreGame.prata.largura,\r\n                    altura: ScoreGame.prata.altura,\r\n                    x: ScoreGame.prata.x,\r\n                    y: ScoreGame.prata.y\r\n                })\r\n            }\r\n        }\r\n        ScoreGame.ouro = {\r\n            spriteX: 0,\r\n            spriteY: 124,\r\n            largura: 44,\r\n            altura: 44,\r\n            x: (Config.canvas.width / 2) / 2.4,\r\n            y: 135,\r\n            desenha() {\r\n                Config.Draw({\r\n                    spriteX: ScoreGame.ouro.spriteX,\r\n                    spriteY: ScoreGame.ouro.spriteY,\r\n                    largura: ScoreGame.ouro.largura,\r\n                    altura: ScoreGame.ouro.altura,\r\n                    x: ScoreGame.ouro.x,\r\n                    y: ScoreGame.ouro.y\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    public static none: IBaseModel;\r\n    public static bronze: IBaseModel;\r\n\r\n\r\n    public static prata: IBaseModel;\r\n    public static ouro: IBaseModel;\r\n\r\n    static desenha() {\r\n        const pontuacaoAtual = Storage.Get<number>(Config.KeyNameStorage.lastPoint);\r\n        const bestPontuacao = Storage.Get<number>(Config.KeyNameStorage.bestPoint);\r\n        Config.contexto.fillText(`${pontuacaoAtual}`, (Config.canvas.width / 3) * 2.4, 147);\r\n        Config.contexto.fillText(`${bestPontuacao}`, (Config.canvas.width / 3) * 2.4, (Config.canvas.width / 3) * 1.9);\r\n        if (pontuacaoAtual < 50) {\r\n            ///@ts-ignore\r\n            ScoreGame.none.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 100) {\r\n            ///@ts-ignore\r\n            ScoreGame.bronze.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 150) {\r\n            ///@ts-ignore\r\n            ScoreGame.prata.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual >= 200) {\r\n            ///@ts-ignore\r\n            ScoreGame.ouro.desenha();\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"names":["Config","Storage","Game","Jogo","canvas","document","querySelector","contexto","getContext","frames","KeyNameStorage","lastPoint","bestPoint","isDeveloper","includes","window","location","hostname","TrilhasSonoras","HIT","Audio","PULO","CAIU","PONTO","sprites","Image","src","Draw","drawImage","Model","spriteX","spriteY","largura","altura","x","y","fazColisao","a","b","aY","flappyBird","_engine","constructor","Engine","this","frameAtual","gravidade","velocidade","pulo","pula","play","movimentos","atualizaOFrameAtual","incremento","baseRepeticao","length","desenha","atualiza","chao","action","Chao","height","repeteEm","movimentacao","Cano","_flappyBird","espaco","ceu","pares","forEach","yRandom","par","canoCeuX","canoCeuY","canoChaoX","canoChaoY","canoCeu","canoChao","temColisaoComOFlappyBird","cabecaDoFlappy","peDoFlappy","push","width","Math","random","shift","PlanoDeFundo","fillStyle","fillRect","Set","key","value","localStorage","setItem","JSON","stringify","Get","getItem","parse","Placar","pontuacao","font","textAlign","fillText","ScoreGame","none","bronze","prata","ouro","pontuacaoAtual","bestPontuacao","Main","mudaParaTela","page","TelaAtiva","inicializa","TelaCondicional","Telas","INICIO","canos","mensagemGetReady","click","JOGO","placar","GAME_OVER","mensagemGameOver","loop","requestAnimationFrame","PageEvents","getElementById","addEventListener","e"],"mappings":"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"}