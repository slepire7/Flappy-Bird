{"version":3,"file":"jogo.min.js","sources":["../ts/storage/index.ts","../ts/config/index.ts","../ts/service/scoreapiService.ts","../ts/game/index.ts","../ts/jogo.ts","../ts/elements/flappybird.ts","../ts/elements/chao.ts","../ts/elements/cano.ts","../ts/elements/plano_fundo.ts","../ts/elements/placar.ts"],"sourcesContent":["export namespace Storage {\r\n    export function Set(key: string, value: any) {\r\n\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n    export function Get<T>(key: string): T {\r\n        const value = localStorage.getItem(key);\r\n\r\n        if (value)\r\n            return JSON.parse(value) as T;\r\n\r\n        return \"\" as T\r\n    }\r\n}","import { Interface } from \"../interface/base\";\r\nimport { Storage } from \"../storage\";\r\nexport namespace Config.Constant {\r\n    export const API = {\r\n        Atualizar: 'https://flappybirdapi.azurewebsites.net/api/Put?code=9MNUOUmKKqCavdFrMwWBDPCPzV5jduvpV3PQAEWVMqTuAzFuARgB6A==',\r\n        Criar: 'https://flappybirdapi.azurewebsites.net/api/Post?code=P7gtMsQyyVYhGGeoFjFHqYyHcE-IJOF4WSnzfKjpx-ikAzFu3oVfjw==',\r\n        Listar: 'https://flappybirdapi.azurewebsites.net/api/Get?code=97ZirDQdmfpy4V8o4HSGP31IzHS9zBp8uGv6X-rAgq05AzFuALUcNA=='\r\n    }\r\n}\r\nexport namespace Config {\r\n    export const canvas = document.querySelector('canvas') as HTMLCanvasElement;\r\n    export const contexto = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    export let IsPause = false;\r\n    export let Frames = 0;\r\n    export const KeyNameStorage = {\r\n        lastPoint: 'FlappyBird1.0Lp',\r\n        bestPoint: 'FlappyBird1.0bp',\r\n        currentPoint: 'FlappyBird1.0cp',\r\n        nickName: 'FlappyBird_nickname'\r\n    }\r\n    const hostnameDev = ['localhost', '127.0.0.1']\r\n    const isDeveloper = hostnameDev.includes(window.location.hostname);\r\n\r\n    export const TrilhasSonoras = {\r\n        \"HIT\": () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/hit.wav`),\r\n        'PULO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/pulo.wav`),\r\n        'CAIU': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/caiu.wav`),\r\n        'PONTO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/ponto.wav`)\r\n    }\r\n    export const sprites = new Image();\r\n    sprites.src = `${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/texture/sprites.png`;\r\n    export const Draw = (Model: Interface.Utils.IBaseModel) => {\r\n        contexto.drawImage(\r\n            Config.sprites,\r\n            Model.spriteX, Model.spriteY,\r\n            Model.largura, Model.altura,\r\n            Model.x, Model.y,\r\n            Model.largura, Model.altura,\r\n        )\r\n    }\r\n\r\n    export function fazColisao(a: Interface.Utils.IBaseModel, b: Interface.Utils.IBaseModel) {\r\n\r\n        const aY = a.y + a.altura;\r\n        const bY = b.y;\r\n        return aY >= bY;\r\n    }\r\n\r\n}\r\nexport namespace Config.Method {\r\n    export function randomIntFromInterval(min: number, max: number) { // min and max included \r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    export function ClearMemory() {\r\n        Frames = 0;\r\n        Storage.Set(KeyNameStorage.currentPoint, 0)\r\n    }\r\n    export function IsNegative(number: number) {\r\n        return Math.sign(number) === -1\r\n    }\r\n}","import { Config } from '../config'\r\nimport { Storage } from '../storage';\r\nexport namespace Service {\r\n\r\n    export class HttpService {\r\n        static ListarPontuacao(): Promise<IResponseScore[]> {\r\n            return fetch(Config.Constant.API.Listar).then(res => res.json()).then(res => res as IResponseScore[]);\r\n        }\r\n        static AtualizaPontuacao() {\r\n\r\n            const payload = {\r\n                nick: Storage.Get<string>(Config.KeyNameStorage.nickName),\r\n                point: Storage.Get<number>(Config.KeyNameStorage.bestPoint)\r\n            }\r\n            fetch(Config.Constant.API.Atualizar, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(payload),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }).then(res => res.ok)\r\n        }\r\n        static CriarPontuacao() {\r\n            const payload = {\r\n                nick: Storage.Get<string>(Config.KeyNameStorage.nickName),\r\n                point: Storage.Get<number>(Config.KeyNameStorage.bestPoint) || 0\r\n            }\r\n            fetch(Config.Constant.API.Criar, {\r\n                method: 'POST',\r\n                body: JSON.stringify(payload),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }).then(res => res.ok)\r\n\r\n        }\r\n    }\r\n\r\n    interface IResponseScore {\r\n        nick: string;\r\n        point: number;\r\n    }\r\n}","import { Interface } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nimport { FlappyBird } from \"../elements/flappybird\";\r\nimport { Chao } from '../elements/chao';\r\nimport { Cano } from '../elements/cano';\r\nimport { PlanoDeFundo } from '../elements/plano_fundo';\r\nimport { Placar, MainScoreGame } from '../elements/placar';\r\nimport { Service } from \"../service/scoreapiService\";\r\nexport namespace Game.Main {\r\n    const Engine: Interface.Utils.Globais = {}\r\n    export const Telas: Interface.Utils.Pages = {\r\n        INICIO: {\r\n            inicializa() {\r\n                Engine.flappyBird = new FlappyBird();\r\n                Engine.chao = new Chao();\r\n                Engine.canos = new Cano();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n\r\n                Engine.flappyBird.desenha();\r\n\r\n                Engine.chao.desenha();\r\n\r\n                mensagemGetReady.desenha();\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.JOGO);\r\n            },\r\n            atualiza() {\r\n\r\n                Engine.chao.atualiza();\r\n            }\r\n        },\r\n        JOGO: {\r\n            inicializa() {\r\n                Engine.placar = new Placar();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n                Engine.canos.desenha();\r\n                Engine.chao.desenha();\r\n                Engine.flappyBird.desenha();\r\n                Engine.placar.desenha();\r\n            },\r\n            click() {\r\n                Engine.flappyBird.pula();\r\n            },\r\n            atualiza() {\r\n                if (Config.IsPause) return;\r\n                Engine.canos.atualiza(TelaCondicional(Telas.GAME_OVER), Engine.flappyBird, Engine.placar);\r\n                Engine.chao.atualiza();\r\n                Engine.flappyBird.atualiza(TelaCondicional(Telas.GAME_OVER), Engine);\r\n            }\r\n        },\r\n        GAME_OVER: {\r\n            inicializa() {\r\n            },\r\n            desenha() {\r\n                if (mensagemGameOver.desenha)\r\n                    mensagemGameOver.desenha();\r\n\r\n                new MainScoreGame().desenha();\r\n            },\r\n            atualiza() {\r\n\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.INICIO);\r\n            }\r\n        }\r\n    }\r\n\r\n    export function mudaParaTela(page: Interface.Utils.IPageGame) {\r\n        TelaAtiva = page;\r\n        TelaAtiva.inicializa();\r\n    }\r\n    export function TelaCondicional(page: Interface.Utils.IPageGame) {\r\n        return () => mudaParaTela(page);\r\n    }\r\n    export let TelaAtiva: Interface.Utils.IPageGame = {\r\n        click: () => {\r\n        },\r\n        atualiza: () => {\r\n        },\r\n        desenha: () => {\r\n        },\r\n        inicializa: () => {\r\n        }\r\n    }\r\n\r\n    const mensagemGetReady: Interface.Elements.IMessage = {\r\n        spriteX: 134,\r\n        spriteY: 0,\r\n        largura: 174,\r\n        altura: 152,\r\n        x: (Config.canvas.width / 2) - 174 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGetReady.spriteX,\r\n                spriteY: mensagemGetReady.spriteY,\r\n                largura: mensagemGetReady.largura,\r\n                altura: mensagemGetReady.altura,\r\n                x: mensagemGetReady.x,\r\n                y: mensagemGetReady.y\r\n            });\r\n        }\r\n    }\r\n    const mensagemGameOver: Interface.Elements.IMessage = {\r\n        spriteX: 134,\r\n        spriteY: 153,\r\n        largura: 226,\r\n        altura: 200,\r\n        x: (Config.canvas.width / 2) - 226 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGameOver.spriteX,\r\n                spriteY: mensagemGameOver.spriteY,\r\n                largura: mensagemGameOver.largura,\r\n                altura: mensagemGameOver.altura,\r\n                x: mensagemGameOver.x,\r\n                y: mensagemGameOver.y\r\n            })\r\n            Service.HttpService.AtualizaPontuacao();\r\n            Config.Method.ClearMemory();\r\n        }\r\n    }\r\n}","import { Config } from './config'\r\nimport { Game } from './game/index';\r\nimport { Service } from './service/scoreapiService';\r\nimport { Storage } from './storage';\r\n\r\nnamespace Jogo.PageEvents {\r\n    function PauseGame() {\r\n        Config.IsPause = !Config.IsPause;\r\n    }\r\n    export function CarregarPlacar() {\r\n        Service.HttpService.ListarPontuacao().then((data) => {\r\n            console.log(data);\r\n            const ulPlacar = document.querySelector<HTMLUListElement>('#list-placar');\r\n            ulPlacar.innerHTML = \"\"\r\n            data.map((item, idx) => {\r\n                let liItem = document.createElement('li')\r\n                liItem.className = 'list-group-item'\r\n                liItem.innerText = `${(idx + 1)}º ${item.nick} - ${item.point}`\r\n                ulPlacar.appendChild(liItem);\r\n            })\r\n        });\r\n    }\r\n    export function Main() {\r\n\r\n        document.getElementById('game-canvas').addEventListener('click', function () {\r\n            if (Storage.Get<string>(Config.KeyNameStorage.nickName) == \"\") {\r\n                GetNickName();\r\n                Service.HttpService.CriarPontuacao();\r\n            }\r\n            if (Game.Main.TelaAtiva.click && Config.IsPause == false) {\r\n                Game.Main.TelaAtiva.click();\r\n            }\r\n        });\r\n\r\n        window.addEventListener('keypress', function (e: KeyboardEvent) {\r\n            const Action = KeysAccept[e.key as keyof typeof KeysAccept]\r\n            if (Action)\r\n                Action(Config.IsPause);\r\n        });\r\n        document.querySelector('#pills-placar-tab').addEventListener('click', function () {\r\n            CarregarPlacar();\r\n        })\r\n        document.querySelector('#pills-pause-tab').addEventListener('click', function () {\r\n            PauseGame();\r\n        })\r\n        Game.Main.mudaParaTela(Game.Main.Telas.INICIO);\r\n        loop();\r\n    }\r\n    const KeysAccept = {\r\n        \" \": (hasPaused: boolean) => {\r\n            if (hasPaused) return;\r\n            Game.Main.TelaAtiva.click()\r\n\r\n        },\r\n        \"p\": (hasPaused: boolean) => {\r\n            PauseGame();\r\n        }\r\n    }\r\n    function GetNickName() {\r\n        let resposta: boolean;\r\n        let nickName: string;\r\n        do {\r\n            nickName = prompt('digite um usuario');\r\n            resposta = confirm(`usuario escolhido :${nickName} correto?`)\r\n        } while (resposta == false)\r\n        Storage.Set(Config.KeyNameStorage.nickName, nickName)\r\n    }\r\n    function loop() {\r\n        Game.Main.TelaAtiva.desenha();\r\n        Game.Main.TelaAtiva.atualiza();\r\n        Config.Frames += 1;\r\n        requestAnimationFrame(loop);\r\n    }\r\n}\r\n\r\nJogo.PageEvents.Main()","import { Interface } from '../interface/base'\r\nimport { Config } from '../config';\r\n\r\nexport class FlappyBird implements Interface.Elements.IFlappybird {\r\n    public frameAtual: number = 0;\r\n    public spriteX: number = 0;\r\n    public spriteY: number = 0;\r\n    public largura: number = 33;\r\n    public altura: number = 24;\r\n    public x: number = 10;\r\n    public y: number = 50;\r\n    public gravidade: number = 0.25;\r\n    public velocidade: number = 0;\r\n    public pulo: number = 4.5;\r\n    pula() {\r\n        Config.TrilhasSonoras.PULO().play();\r\n        this.velocidade = - this.pulo\r\n    };\r\n    movimentos: Interface.Utils.Movimento[] = [\r\n        { spriteX: 0, spriteY: 0, }, // asa pra cima\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n        { spriteX: 0, spriteY: 52, }, // asa pra baixo\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n    ];\r\n    atualizaOFrameAtual() {\r\n        const intervaloDeFrames = 10;\r\n        const passouOIntervalo = Config.Frames % intervaloDeFrames === 0;\r\n\r\n        if (passouOIntervalo) {\r\n            const baseDoIncremento = 1;\r\n            const incremento = baseDoIncremento + this.frameAtual;\r\n            const baseRepeticao = this.movimentos.length;\r\n            this.frameAtual = incremento % baseRepeticao\r\n        }\r\n    };\r\n    desenha: Function = () => {\r\n        const { spriteX, spriteY } = this.movimentos[this.frameAtual];\r\n        Config.Draw({\r\n            spriteX: spriteX,\r\n            spriteY: spriteY,\r\n            altura: this.altura,\r\n            largura: this.largura,\r\n            x: this.x,\r\n            y: this.y\r\n        });\r\n    };\r\n    atualiza(action: Function, _engine: Interface.Utils.Globais) {\r\n        this.atualizaOFrameAtual();\r\n        if (Config.fazColisao(this, _engine.chao)) {\r\n            Config.TrilhasSonoras.CAIU().play()\r\n            action();\r\n            return;\r\n        }\r\n        this.velocidade = this.velocidade + this.gravidade;\r\n        this.y = this.y + this.velocidade;\r\n    }\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from '../config';\r\n\r\nexport class Chao implements Interface.Elements.IChao {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.spriteX = 0;\r\n        this.spriteY = 610;\r\n        this.largura = 224;\r\n        this.altura = 112;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 112;\r\n\r\n    }\r\n    atualiza() {\r\n        const movimentoDoChao = 1;\r\n        const repeteEm = this.largura / 2;\r\n        const movimentacao = this.x - movimentoDoChao;\r\n        this.x = movimentacao % repeteEm;\r\n    }\r\n    desenha() {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        });\r\n    }\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from '../config'\r\nimport { Storage } from \"../storage\";\r\n\r\n\r\nexport class Cano implements Interface.Elements.ICano {\r\n    largura: number;\r\n    altura: number;\r\n    espaco: number;\r\n    chao: Interface.Utils.Movimento;\r\n    ceu: Interface.Utils.Movimento;\r\n    pares: Interface.Utils.Dimensoes[];\r\n    constructor() {\r\n        this.largura = 52;\r\n        this.altura = 400;\r\n        this.espaco = 90;\r\n        this.chao = {\r\n            spriteX: 0,\r\n            spriteY: 169,\r\n        };\r\n        this.ceu = {\r\n            spriteX: 52,\r\n            spriteY: 169,\r\n        };\r\n        this.pares = [];\r\n    }\r\n    desenha() {\r\n        this.pares.forEach((par) => {\r\n            const yRandom = par.y;\r\n            const canoCeuX = par.x;\r\n            const canoCeuY = yRandom;\r\n            // [Cano do Céu]\r\n            Config.Draw({\r\n                spriteX: this.ceu.spriteX,\r\n                spriteY: this.ceu.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoCeuX,\r\n                y: canoCeuY,\r\n            })\r\n            // [Cano do Chão]\r\n            const canoChaoX = par.x;\r\n            const canoChaoY = this.altura + this.espaco + yRandom;\r\n            Config.Draw({\r\n                spriteX: this.chao.spriteX,\r\n                spriteY: this.chao.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoChaoX,\r\n                y: canoChaoY,\r\n            });\r\n            par.canoCeu = {\r\n                x: canoCeuX,\r\n                y: this.altura + canoCeuY\r\n            }\r\n            par.canoChao = {\r\n                x: canoChaoX,\r\n                y: canoChaoY\r\n            }\r\n        })\r\n    };\r\n    temColisaoComOFlappyBird(par: Interface.Utils.Dimensoes, _flappyBird: Interface.Elements.IFlappybird) {\r\n        const Desconto_Colisao = 1;\r\n        const Desconto_Colisao_Costa = 5;\r\n        const cabecaDoFlappy = _flappyBird.y + Desconto_Colisao;\r\n\r\n        const peDoFlappy = (_flappyBird.y + _flappyBird.altura) - Desconto_Colisao;\r\n        const costaDoFlappy = Config.Method.IsNegative(_flappyBird.x + _flappyBird.largura) ?\r\n            (_flappyBird.x + _flappyBird.largura) - Desconto_Colisao_Costa :\r\n            (_flappyBird.x + _flappyBird.largura) + Desconto_Colisao_Costa\r\n\r\n        if (costaDoFlappy >= par.x) {\r\n            if (cabecaDoFlappy <= par.canoCeu.y || peDoFlappy >= par.canoChao.y)\r\n                return true;\r\n\r\n        }\r\n        return false;\r\n    };\r\n    atualiza(action: Function, _flappyBird: Interface.Elements.IFlappybird, _placar: Interface.Elements.IPlacar) {\r\n\r\n        const currentPoint = Storage.Get<number>(Config.KeyNameStorage.currentPoint) || 0;\r\n        const _Frames = intervalos_canos.Get(currentPoint);\r\n        const passouFrames = Config.Frames % _Frames == 0;\r\n        if (passouFrames)\r\n            this.pares.push({\r\n                x: Config.canvas.width,\r\n                y: -150 * (Math.random() + 1),\r\n            });\r\n\r\n        for (let par of this.pares) {\r\n            par.x = par.x - Velocidades.dispach(currentPoint);\r\n\r\n            if (this.temColisaoComOFlappyBird(par, _flappyBird)) {\r\n                Config.TrilhasSonoras.HIT().play();\r\n                action();\r\n            }\r\n\r\n            if (par.x + this.largura <= 0) {\r\n                this.pares.shift();\r\n                _placar.atualiza();\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst intervalo_cano = {\r\n    \"10\": 150,\r\n    \"20\": 100,\r\n    \"30\": 80,\r\n}\r\nconst intervalos_canos = {\r\n    Get: (pontuacao: number) => {\r\n        const keys = Object.keys(intervalo_cano).map(itm => new Number(itm));\r\n        const field = keys.find(key => key >= pontuacao) || keys[keys.length - 1]\r\n        return intervalo_cano[field as keyof object];\r\n    }\r\n}\r\nconst dificuldade_velocidade = {\r\n    \"20\": 2,\r\n    \"40\": 2.5,\r\n    \"80\": 4,\r\n    \"100\": 4.5,\r\n    \"110\": 5,\r\n    \"120\": 6,\r\n    \"130\": 7,\r\n    \"140\": 8,\r\n    \"150\": 9,\r\n    \"200\": 10\r\n}\r\nconst Velocidades = {\r\n    dispach: (pontuacao: number) => {\r\n        const keys = Object.keys(dificuldade_velocidade).map(itm => new Number(itm));\r\n        const field = keys.find(key => key >= pontuacao) || keys[keys.length - 1]\r\n        const difcultades = dificuldade_velocidade[field as keyof object];\r\n\r\n        return difcultades\r\n    },\r\n};\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nexport class PlanoDeFundo implements Interface.Utils.IBaseModel {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        this.spriteX = 390;\r\n        this.spriteY = 0;\r\n        this.largura = 275;\r\n        this.altura = 204;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 204;\r\n\r\n    }\r\n    desenha() {\r\n        Config.contexto.fillStyle = '#70c5ce';\r\n        Config.contexto.fillRect(0, 0, Config.canvas.width, Config.canvas.height)\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        })\r\n    }\r\n    atualiza(): void {\r\n    }\r\n\r\n}\r\n","import { Config } from \"../config\";\r\nimport { Interface } from \"../interface/base\";\r\nimport { Storage } from \"../storage\";\r\n\r\nexport class Placar implements Interface.Elements.IPlacar {\r\n    pontuacao: number = 0;\r\n\r\n    desenha() {\r\n        Config.contexto.font = '35px \"VT323\"';\r\n        Config.contexto.textAlign = 'right';\r\n        Config.contexto.fillStyle = 'white';\r\n        Config.contexto.fillText(`${this.pontuacao}`, Config.canvas.width - 10, 35);\r\n\r\n        Storage.Set(Config.KeyNameStorage.lastPoint, this.pontuacao)\r\n\r\n        const bestP = Storage.Get<number>(Config.KeyNameStorage.bestPoint),\r\n            lastP = Storage.Get<number>(Config.KeyNameStorage.lastPoint);\r\n        if (lastP > bestP) {\r\n            Storage.Set(Config.KeyNameStorage.bestPoint, this.pontuacao)\r\n        }\r\n\r\n    };\r\n    atualiza() {\r\n        Config.TrilhasSonoras.PONTO().play();\r\n        this.pontuacao = this.pontuacao + 1;\r\n        Storage.Set(Config.KeyNameStorage.currentPoint, this.pontuacao);\r\n    }\r\n}\r\n\r\n\r\nexport class MainScoreGame implements Interface.Utils.IScoreMain {\r\n    none: Interface.Utils.IScore;\r\n    bronze: Interface.Utils.IScore;\r\n    prata: Interface.Utils.IScore;\r\n    ouro: Interface.Utils.IScore;\r\n    constructor() {\r\n        const X_In_Screen = (Config.canvas.width / 2) / 2.4,\r\n            Y_In_Screen = 135;\r\n        this.none = new Score(0, 78, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.bronze = new Score(48, 124, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.prata = new Score(48, 78, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.ouro = new Score(0, 124, 44, 44, X_In_Screen, Y_In_Screen);\r\n    }\r\n    desenha() {\r\n        const pontuacaoAtual = Storage.Get<number>(Config.KeyNameStorage.lastPoint),\r\n            bestPontuacao = Storage.Get<number>(Config.KeyNameStorage.bestPoint);\r\n        const X_In_Screen = (Config.canvas.width / 3) * 2.4,\r\n            Y_In_Screen = (Config.canvas.width / 3) * 1.9\r\n        Config.contexto.fillText(`${pontuacaoAtual}`, X_In_Screen, 147);\r\n        Config.contexto.fillText(`${bestPontuacao}`, X_In_Screen, Y_In_Screen);\r\n        if (pontuacaoAtual < 50) {\r\n            this.none.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 100) {\r\n            this.bronze.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 150) {\r\n            this.prata.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual >= 200) {\r\n            this.ouro.desenha();\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n}\r\nclass Score implements Interface.Utils.IScore {\r\n    constructor(\r\n        _spriteX: number,\r\n        _spriteY: number,\r\n        _largura: number,\r\n        _altura: number,\r\n        _x: number,\r\n        _y: number) {\r\n        this.spriteX = _spriteX\r\n        this.spriteY = _spriteY\r\n        this.largura = _largura\r\n        this.altura = _altura\r\n        this.x = _x\r\n        this.y = _y\r\n    }\r\n    desenha(): void {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n    }\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n}"],"names":["Storage","Config","Service","Game","Jogo","Set","key","value","localStorage","setItem","JSON","stringify","Get","getItem","parse","Constant","API","Atualizar","Criar","Listar","canvas","document","querySelector","contexto","getContext","IsPause","Frames","KeyNameStorage","lastPoint","bestPoint","currentPoint","nickName","isDeveloper","includes","window","location","hostname","TrilhasSonoras","HIT","Audio","PULO","CAIU","PONTO","sprites","Image","src","Draw","drawImage","Model","spriteX","spriteY","largura","altura","x","y","fazColisao","a","b","aY","Method","randomIntFromInterval","min","max","Math","floor","random","ClearMemory","IsNegative","number","sign","FlappyBird","frameAtual","gravidade","velocidade","pulo","pula","play","this","movimentos","atualizaOFrameAtual","incremento","baseRepeticao","length","desenha","atualiza","action","_engine","chao","Chao","constructor","height","repeteEm","movimentacao","Cano","espaco","ceu","pares","forEach","yRandom","par","canoCeuX","canoCeuY","canoChaoX","canoChaoY","canoCeu","canoChao","temColisaoComOFlappyBird","_flappyBird","cabecaDoFlappy","peDoFlappy","_placar","_Frames","intervalos_canos","push","width","Velocidades","dispach","shift","intervalo_cano","10","20","30","keys","Object","map","itm","Number","field","find","pontuacao","dificuldade_velocidade","40","80","100","110","120","130","140","150","200","PlanoDeFundo","fillStyle","fillRect","Placar","font","textAlign","fillText","MainScoreGame","none","bronze","prata","ouro","X_In_Screen","Score","pontuacaoAtual","bestPontuacao","Y_In_Screen","_spriteX","_spriteY","_largura","_altura","_x","_y","HttpService","ListarPontuacao","fetch","then","res","json","AtualizaPontuacao","payload","nick","point","method","body","headers","Content-Type","ok","CriarPontuacao","Main","Engine","mudaParaTela","page","TelaAtiva","inicializa","TelaCondicional","Telas","INICIO","flappyBird","canos","mensagemGetReady","click","JOGO","placar","GAME_OVER","mensagemGameOver","PauseGame","CarregarPlacar","console","log","data","ulPlacar","innerHTML","item","idx","let","liItem","createElement","className","innerText","appendChild","PageEvents","getElementById","addEventListener","GetNickName","resposta","prompt","confirm","e","Action","KeysAccept","loop"," ","hasPaused","p","requestAnimationFrame"],"mappings":"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"}