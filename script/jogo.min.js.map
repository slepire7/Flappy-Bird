{"version":3,"file":"jogo.min.js","sources":["../ts/config/index.ts","../ts/storage/index.ts","../ts/game/index.ts","../ts/jogo.ts","../ts/elements/flappybird.ts","../ts/elements/chao.ts","../ts/elements/cano.ts","../ts/elements/plano_fundo.ts","../ts/elements/placar.ts"],"sourcesContent":["import { IBaseModel } from \"../interface/base\";\r\n\r\nexport namespace Config {\r\n    export const canvas = document.querySelector('canvas') as HTMLCanvasElement;\r\n    export const contexto = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    export let frames = 0;\r\n    export const KeyNameStorage = {\r\n        lastPoint: 'FlappyBird1.0Lp',\r\n        bestPoint: 'FlappyBird1.0bp'\r\n    }\r\n    const hostnameDev = ['localhost', '127.0.0.1']\r\n    const isDeveloper = hostnameDev.includes(window.location.hostname);\r\n\r\n    export const TrilhasSonoras = {\r\n        \"HIT\": () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/hit.wav`),\r\n        'PULO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/pulo.wav`),\r\n        'CAIU': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/caiu.wav`),\r\n        'PONTO': () => new Audio(`${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/efeitos/ponto.wav`)\r\n    }\r\n    export const sprites = new Image();\r\n    sprites.src = `${isDeveloper == false ? '../Flappy-Bird/' : '../'}assets/texture/sprites.png`;\r\n    export const Draw = (Model: IBaseModel) => {\r\n        contexto.drawImage(\r\n            Config.sprites,\r\n            Model.spriteX, Model.spriteY,\r\n            Model.largura, Model.altura,\r\n            Model.x, Model.y,\r\n            Model.largura, Model.altura,\r\n        )\r\n    }\r\n\r\n    export function fazColisao(a: IBaseModel, b: IBaseModel) {\r\n\r\n        const aY = a.y + a.altura;\r\n        const bY = b.y;\r\n        return aY >= bY;\r\n    }\r\n\r\n}","export namespace Storage {\r\n    export function Set(key: string, value: any) {\r\n\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n    export function Get<T>(key: string): T {\r\n        const value = localStorage.getItem(key);\r\n\r\n        if (value)\r\n            return JSON.parse(value) as T;\r\n\r\n        return \"\" as T\r\n    }\r\n}","import { Interface } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nimport { FlappyBird } from \"../elements/flappybird\";\r\nimport { Chao } from '../elements/chao';\r\nimport { Cano } from '../elements/cano';\r\nimport { PlanoDeFundo } from '../elements/plano_fundo';\r\nimport { Placar, MainScoreGame } from '../elements/placar';\r\nexport namespace Game.Main {\r\n    const Engine: Interface.Utils.Globais = {}\r\n    export const Telas: Interface.Utils.Pages = {\r\n        INICIO: {\r\n            inicializa() {\r\n                Engine.flappyBird = new FlappyBird();\r\n                Engine.chao = new Chao();\r\n                Engine.canos = new Cano();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n\r\n                Engine.flappyBird.desenha();\r\n\r\n                Engine.chao.desenha();\r\n\r\n                mensagemGetReady.desenha();\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.JOGO);\r\n            },\r\n            atualiza() {\r\n\r\n                Engine.chao.atualiza();\r\n            }\r\n        },\r\n        JOGO: {\r\n            inicializa() {\r\n                Engine.placar = new Placar();\r\n            },\r\n            desenha() {\r\n                new PlanoDeFundo().desenha();\r\n                Engine.canos.desenha();\r\n                Engine.chao.desenha();\r\n\r\n                Engine.flappyBird.desenha();\r\n\r\n                Engine.placar.desenha();\r\n            },\r\n            click() {\r\n                Engine.flappyBird.pula();\r\n            },\r\n            atualiza() {\r\n                Engine.canos.atualiza(TelaCondicional(Telas.GAME_OVER), Engine.flappyBird);\r\n                Engine.chao.atualiza();\r\n                Engine.flappyBird.atualiza(TelaCondicional(Telas.GAME_OVER), Engine);\r\n                Engine.placar.atualiza();\r\n            }\r\n        },\r\n        GAME_OVER: {\r\n            inicializa() {\r\n            },\r\n            desenha() {\r\n                if (mensagemGameOver.desenha)\r\n                    mensagemGameOver.desenha();\r\n\r\n                new MainScoreGame().desenha();\r\n            },\r\n            atualiza() {\r\n\r\n            },\r\n            click() {\r\n                mudaParaTela(Telas.INICIO);\r\n            }\r\n        }\r\n    }\r\n\r\n    export function mudaParaTela(page: Interface.Utils.IPageGame) {\r\n        TelaAtiva = page;\r\n        TelaAtiva.inicializa();\r\n    }\r\n    export function TelaCondicional(page: Interface.Utils.IPageGame) {\r\n        return () => {\r\n            TelaAtiva = page;\r\n\r\n            TelaAtiva.inicializa();\r\n        }\r\n    }\r\n    export let TelaAtiva: Interface.Utils.IPageGame = {\r\n        click: () => {\r\n        },\r\n        atualiza: () => {\r\n        },\r\n        desenha: () => {\r\n        },\r\n        inicializa: () => {\r\n        }\r\n    }\r\n\r\n    const mensagemGetReady: Interface.Elements.IMessage = {\r\n        spriteX: 134,\r\n        spriteY: 0,\r\n        largura: 174,\r\n        altura: 152,\r\n        x: (Config.canvas.width / 2) - 174 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGetReady.spriteX,\r\n                spriteY: mensagemGetReady.spriteY,\r\n                largura: mensagemGetReady.largura,\r\n                altura: mensagemGetReady.altura,\r\n                x: mensagemGetReady.x,\r\n                y: mensagemGetReady.y\r\n            });\r\n        }\r\n    }\r\n    const mensagemGameOver: Interface.Elements.IMessage = {\r\n        spriteX: 134,\r\n        spriteY: 153,\r\n        largura: 226,\r\n        altura: 200,\r\n        x: (Config.canvas.width / 2) - 226 / 2,\r\n        y: 50,\r\n        desenha() {\r\n            Config.Draw({\r\n                spriteX: mensagemGameOver.spriteX,\r\n                spriteY: mensagemGameOver.spriteY,\r\n                largura: mensagemGameOver.largura,\r\n                altura: mensagemGameOver.altura,\r\n                x: mensagemGameOver.x,\r\n                y: mensagemGameOver.y\r\n            })\r\n        }\r\n    }\r\n}","import { Config } from './config'\r\nimport { Game } from './game/index';\r\n\r\nnamespace Jogo.PageEvents {\r\n\r\n    export function Main() {\r\n\r\n        document.getElementById('game-canvas').addEventListener('click', function () {\r\n            if (Game.Main.TelaAtiva.click) {\r\n                Game.Main.TelaAtiva.click();\r\n            }\r\n        });\r\n        window.addEventListener('keypress', function (e: KeyboardEvent) {\r\n            if (Game.Main.TelaAtiva.click)\r\n                Game.Main.TelaAtiva.click()\r\n        })\r\n        Game.Main.mudaParaTela(Game.Main.Telas.INICIO);\r\n        loop();\r\n    }\r\n    function loop() {\r\n        Game.Main.TelaAtiva.desenha();\r\n        Game.Main.TelaAtiva.atualiza();\r\n        Config.frames = Config.frames + 1;\r\n        requestAnimationFrame(loop);\r\n    }\r\n}\r\n\r\nJogo.PageEvents.Main()","import { Interface } from '../interface/base'\r\nimport { Config } from '../config';\r\n\r\nexport class FlappyBird implements Interface.Elements.IFlappybird {\r\n    public frameAtual: number = 0;\r\n    public spriteX: number = 0;\r\n    public spriteY: number = 0;\r\n    public largura: number = 33;\r\n    public altura: number = 24;\r\n    public x: number = 10;\r\n    public y: number = 50;\r\n    public gravidade: number = 0.25;\r\n    public velocidade: number = 0;\r\n    public pulo: number = 4;\r\n    pula() {\r\n        Config.TrilhasSonoras.PULO().play();\r\n        this.velocidade = - this.pulo\r\n    };\r\n    movimentos: Interface.Utils.Movimento[] = [\r\n        { spriteX: 0, spriteY: 0, }, // asa pra cima\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n        { spriteX: 0, spriteY: 52, }, // asa pra baixo\r\n        { spriteX: 0, spriteY: 26, }, // asa no meio \r\n    ];\r\n    atualizaOFrameAtual() {\r\n        const intervaloDeFrames = 10;\r\n        const passouOIntervalo = Config.frames % intervaloDeFrames === 0;\r\n\r\n        if (passouOIntervalo) {\r\n            const baseDoIncremento = 1;\r\n            const incremento = baseDoIncremento + this.frameAtual;\r\n            const baseRepeticao = this.movimentos.length;\r\n            this.frameAtual = incremento % baseRepeticao\r\n        }\r\n    };\r\n    desenha: Function = () => {\r\n        this.atualizaOFrameAtual();\r\n        const { spriteX, spriteY } = this.movimentos[this.frameAtual];\r\n        Config.Draw({\r\n            spriteX: spriteX,\r\n            spriteY: spriteY,\r\n            altura: this.altura,\r\n            largura: this.largura,\r\n            x: this.x,\r\n            y: this.y\r\n        });\r\n    };\r\n    atualiza(action: Function, _engine: Interface.Utils.Globais) {\r\n\r\n        if (Config.fazColisao(this, _engine.chao)) {\r\n            Config.TrilhasSonoras.CAIU().play()\r\n            action();\r\n            return;\r\n        }\r\n        this.velocidade = this.velocidade + this.gravidade;\r\n        this.y = this.y + this.velocidade;\r\n    }\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from '../config';\r\n\r\nexport class Chao implements Interface.Elements.IChao {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.spriteX = 0;\r\n        this.spriteY = 610;\r\n        this.largura = 224;\r\n        this.altura = 112;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 112;\r\n\r\n    }\r\n    atualiza() {\r\n        const movimentoDoChao = 1;\r\n        const repeteEm = this.largura / 2;\r\n        const movimentacao = this.x - movimentoDoChao;\r\n        this.x = movimentacao % repeteEm;\r\n    }\r\n    desenha() {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        });\r\n    }\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from '../config'\r\n\r\n\r\nexport class Cano implements Interface.Elements.ICano {\r\n    largura: number;\r\n    altura: number;\r\n    espaco: number;\r\n    chao: Interface.Utils.Movimento;\r\n    ceu: Interface.Utils.Movimento;\r\n    pares: Interface.Utils.Dimensoes[];\r\n    constructor() {\r\n        this.largura = 52;\r\n        this.altura = 400;\r\n        this.espaco = 80;\r\n        this.chao = {\r\n            spriteX: 0,\r\n            spriteY: 169,\r\n        };\r\n        this.ceu = {\r\n            spriteX: 52,\r\n            spriteY: 169,\r\n        };\r\n        this.pares = [];\r\n    }\r\n    desenha() {\r\n        this.pares.forEach((par) => {\r\n            const yRandom = par.y;\r\n            const espacamentoEntreCanos = 90;\r\n            const canoCeuX = par.x;\r\n            const canoCeuY = yRandom;\r\n            // [Cano do Céu]\r\n            Config.Draw({\r\n                spriteX: this.ceu.spriteX,\r\n                spriteY: this.ceu.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoCeuX,\r\n                y: canoCeuY,\r\n            })\r\n            // [Cano do Chão]\r\n            const canoChaoX = par.x;\r\n            const canoChaoY = this.altura + espacamentoEntreCanos + yRandom;\r\n            Config.Draw({\r\n                spriteX: this.chao.spriteX,\r\n                spriteY: this.chao.spriteY,\r\n                largura: this.largura,\r\n                altura: this.altura,\r\n                x: canoChaoX,\r\n                y: canoChaoY,\r\n            });\r\n            par.canoCeu = {\r\n                x: canoCeuX,\r\n                y: this.altura + canoCeuY\r\n            }\r\n            par.canoChao = {\r\n                x: canoChaoX,\r\n                y: canoChaoY\r\n            }\r\n        })\r\n    };\r\n    temColisaoComOFlappyBird(par: Interface.Utils.Dimensoes, _flappyBird: Interface.Elements.IFlappybird) {\r\n\r\n        const cabecaDoFlappy = _flappyBird.y;\r\n        const peDoFlappy = _flappyBird.y + _flappyBird.altura;\r\n        if ((_flappyBird.x + _flappyBird.largura) >= par.x) {\r\n            ///@ts-ignore\r\n            if (cabecaDoFlappy <= par.canoCeu.y || peDoFlappy >= par.canoChao.y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    atualiza(action: Function, _flappyBird: Interface.Elements.IFlappybird) {\r\n        const passou100Frames = Config.frames % 100 === 0;\r\n        if (passou100Frames) {\r\n            this.pares.push({\r\n                x: Config.canvas.width,\r\n                y: -150 * (Math.random() + 1),\r\n            });\r\n        }\r\n\r\n        this.pares.forEach((par) => {\r\n            par.x = par.x - 2;\r\n\r\n            if (this.temColisaoComOFlappyBird(par, _flappyBird)) {\r\n                Config.TrilhasSonoras.HIT().play();\r\n                action();\r\n            }\r\n\r\n            if (par.x + this.largura <= 0) {\r\n                this.pares.shift();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","import { Interface } from \"../interface/base\";\r\nimport { Config } from \"../config\";\r\nexport class PlanoDeFundo implements Interface.Utils.IBaseModel {\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        this.spriteX = 390;\r\n        this.spriteY = 0;\r\n        this.largura = 275;\r\n        this.altura = 204;\r\n        this.x = 0;\r\n        this.y = Config.canvas.height - 204;\r\n\r\n    }\r\n    desenha() {\r\n        Config.contexto.fillStyle = '#70c5ce';\r\n        Config.contexto.fillRect(0, 0, Config.canvas.width, Config.canvas.height)\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: (this.x + this.largura),\r\n            y: this.y\r\n        })\r\n    }\r\n    atualiza(): void {\r\n    }\r\n\r\n}\r\n","import { Config } from \"../config\";\r\nimport { Interface } from \"../interface/base\";\r\nimport { Storage } from \"../storage\";\r\n\r\nexport class Placar {\r\n    pontuacao: number = 0;\r\n    desenha() {\r\n        Config.contexto.font = '35px \"VT323\"';\r\n        Config.contexto.textAlign = 'right';\r\n        Config.contexto.fillStyle = 'white';\r\n        Config.contexto.fillText(`${this.pontuacao}`, Config.canvas.width - 10, 35);\r\n\r\n        Storage.Set(Config.KeyNameStorage.lastPoint, this.pontuacao)\r\n\r\n        let bestP = Storage.Get<number>(Config.KeyNameStorage.bestPoint),\r\n            lastP = Storage.Get<number>(Config.KeyNameStorage.lastPoint);\r\n        if (lastP > bestP)\r\n            Storage.Set(Config.KeyNameStorage.bestPoint, this.pontuacao)\r\n\r\n    };\r\n    atualiza() {\r\n        const intervaloDeFrames = 30;\r\n        const passouOIntervalo = Config.frames % intervaloDeFrames === 0;\r\n\r\n        if (passouOIntervalo) {\r\n            Config.TrilhasSonoras.PONTO().play();\r\n            this.pontuacao = this.pontuacao + 1;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Score implements Interface.Utils.IScore {\r\n    constructor(\r\n        _spriteX: number,\r\n        _spriteY: number,\r\n        _largura: number,\r\n        _altura: number,\r\n        _x: number,\r\n        _y: number) {\r\n        this.spriteX = _spriteX\r\n        this.spriteY = _spriteY\r\n        this.largura = _largura\r\n        this.altura = _altura\r\n        this.x = _x\r\n        this.y = _y\r\n    }\r\n    desenha(): void {\r\n        Config.Draw({\r\n            spriteX: this.spriteX,\r\n            spriteY: this.spriteY,\r\n            largura: this.largura,\r\n            altura: this.altura,\r\n            x: this.x,\r\n            y: this.y\r\n        })\r\n    }\r\n    spriteX: number;\r\n    spriteY: number;\r\n    largura: number;\r\n    altura: number;\r\n    x: number;\r\n    y: number;\r\n\r\n}\r\nexport class MainScoreGame implements Interface.Utils.IScoreMain {\r\n    none: Interface.Utils.IScore;\r\n    bronze: Interface.Utils.IScore;\r\n    prata: Interface.Utils.IScore;\r\n    ouro: Interface.Utils.IScore;\r\n    constructor() {\r\n        const X_In_Screen = (Config.canvas.width / 2) / 2.4;\r\n        const Y_In_Screen = 135;\r\n        this.none = new Score(0, 78, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.bronze = new Score(48, 124, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.prata = new Score(48, 78, 44, 44, X_In_Screen, Y_In_Screen);\r\n        this.ouro = new Score(0, 124, 44, 44, X_In_Screen, Y_In_Screen);\r\n    }\r\n    desenha() {\r\n        const pontuacaoAtual = Storage.Get<number>(Config.KeyNameStorage.lastPoint);\r\n        const bestPontuacao = Storage.Get<number>(Config.KeyNameStorage.bestPoint);\r\n        Config.contexto.fillText(`${pontuacaoAtual}`, (Config.canvas.width / 3) * 2.4, 147);\r\n        Config.contexto.fillText(`${bestPontuacao}`, (Config.canvas.width / 3) * 2.4, (Config.canvas.width / 3) * 1.9);\r\n        if (pontuacaoAtual < 50) {\r\n\r\n            this.none.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 100) {\r\n\r\n            this.bronze.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual <= 150) {\r\n\r\n            this.prata.desenha();\r\n            return;\r\n        }\r\n        if (pontuacaoAtual >= 200) {\r\n\r\n            this.ouro.desenha();\r\n            return;\r\n        }\r\n    }\r\n\r\n}"],"names":["Config","Storage","Game","Jogo","canvas","document","querySelector","contexto","getContext","frames","KeyNameStorage","lastPoint","bestPoint","isDeveloper","includes","window","location","hostname","TrilhasSonoras","HIT","Audio","PULO","CAIU","PONTO","sprites","Image","src","Draw","drawImage","Model","spriteX","spriteY","largura","altura","x","y","fazColisao","a","b","aY","FlappyBird","frameAtual","gravidade","velocidade","pulo","pula","play","this","movimentos","atualizaOFrameAtual","incremento","baseRepeticao","length","desenha","atualiza","action","_engine","chao","Chao","constructor","height","repeteEm","movimentacao","Cano","espaco","ceu","pares","forEach","yRandom","par","canoCeuX","canoCeuY","canoChaoX","canoChaoY","canoCeu","canoChao","temColisaoComOFlappyBird","_flappyBird","cabecaDoFlappy","peDoFlappy","push","width","Math","random","shift","PlanoDeFundo","fillStyle","fillRect","Set","key","value","localStorage","setItem","JSON","stringify","Get","getItem","parse","Placar","pontuacao","font","textAlign","fillText","Score","_spriteX","_spriteY","_largura","_altura","_x","_y","MainScoreGame","none","bronze","prata","ouro","X_In_Screen","pontuacaoAtual","bestPontuacao","Main","Engine","mudaParaTela","page","TelaAtiva","inicializa","TelaCondicional","Telas","INICIO","flappyBird","canos","mensagemGetReady","click","JOGO","placar","GAME_OVER","mensagemGameOver","loop","requestAnimationFrame","PageEvents","getElementById","addEventListener","e"],"mappings":"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"}